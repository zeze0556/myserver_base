##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /app/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
	  client_max_body_size	512m;
	  client_body_buffer_size	512m;


	server_name _;

	location ~ ^/ttyd(.*)$ {
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_pass http://unix:/var/run/ttyd.sock:/$1; #http://127.0.0.1:7681/;
    #proxy_pass http://127.0.0.1:7681/$1;
}

location /novnc/ {
    proxy_pass http://127.0.0.1:6080/;
}

location /wsproxy/ {
    proxy_read_timeout 3600;
    proxy_pass http://127.0.0.1:6080/;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

    location /api/ws/ {
        proxy_pass http://127.0.0.1:8080;
        #proxy_pass http://npm:9526;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header    Host                localhost;
        #proxy_set_header    X-Real-IP           $remote_addr;
        #proxy_set_header    X-Forwarded-Host    localhost;
        #proxy_set_header    X-Forwarded-Server  localhost;
        #proxy_set_header    X-Forwarded-Proto   $scheme;
        #proxy_set_header    X-Forwarded-For     $remote_addr;
        proxy_set_header Origin localhost;
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-control-Allow-Origin "*";
	  }

    location /api/ {
        #rewrite /metro/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header    Host                localhost;
        proxy_redirect off;
        #proxy_set_header    X-Real-IP           $remote_addr;
        #proxy_set_header    X-Forwarded-Host    localhost;
        #proxy_set_header    X-Forwarded-Server  localhost;
        #proxy_set_header    X-Forwarded-Proto   $scheme;
        #proxy_set_header    X-Forwarded-For     $remote_addr;
        proxy_set_header Origin localhost;
        proxy_hide_header Access-Control-Allow-Origin;
        add_header Access-control-Allow-Origin "*";
        #sub_filter "/" "/metro/";
        #sub_filter_once off;
    }


	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
      try_files $uri $uri/ /index.html /index.php?$query_string;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

