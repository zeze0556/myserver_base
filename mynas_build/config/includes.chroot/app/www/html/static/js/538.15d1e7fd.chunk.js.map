{"version":3,"file":"static/js/538.15d1e7fd.chunk.js","mappings":"oPA+BMA,GAAeC,EAAAA,EAAAA,aAAW,SAACC,EAAOC,GACpC,IAAQC,EAAyDF,EAAzDE,SAAUC,EAA+CH,EAA/CG,QAASC,EAAsCJ,EAAtCI,UAAWC,EAA2BL,EAA3BK,WAAYC,EAAeN,EAAfM,WAClD,OAAOC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAAEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,GAAI,CAAEC,SAAU,YAAaJ,UAC1CF,EAAAA,EAAAA,MAACO,EAAAA,EAAO,CACJF,GAAI,CACAG,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBC,aAAc,OAChBT,SAAA,EAEFC,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,MAAMT,GAAI,CACzCU,SAAU,EACVC,OAAQ,QAERC,UAAU,eACVC,QAASvB,EAASO,SAEnBT,EAAM0B,SAEThB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,MAAM,UAAUH,QAASnB,EAAWG,UAC5CC,EAAAA,EAAAA,KAACmB,EAAAA,EAAQ,MAEZ7B,EAAM8B,aACHpB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,MAAM,UAAUH,QAASrB,EAAUK,UAC3CC,EAAAA,EAAAA,KAACqB,EAAAA,EAAO,OAGZrB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,MAAM,UAAUH,QAASpB,EAAWI,UAC5CC,EAAAA,EAAAA,KAACsB,EAAAA,EAAQ,OAGjBtB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAACC,MAAM,UAAUH,QAAStB,EAAQM,UACzCC,EAAAA,EAAAA,KAACuB,EAAAA,EAAK,WAIbjC,EAAMS,WAGf,IAEA,W,oLClDe,SAASyB,EAAMlC,GAC1B,IAAMmC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAAWF,EAAAA,EAAAA,QAAO,MACNjC,GAA+CH,EAAzDE,SAAyDF,EAA/CG,SAA+CH,EAAtCI,UAAsCJ,EAA3BK,WAA2BL,EAAfM,WA8DlD,OA7DAiC,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAI,gBAAiBC,OAAOC,SAASC,MAC7CN,EAASO,QAAU,IAAIC,EAAAA,SAAS,CAC5BC,aAAc,SAEdC,YAAY,EACZC,WAAY,GACZC,cAAc,EACdC,YAAa,YACbC,aAAa,IAEjBd,EAASe,OAAS,WACdf,EAASgB,MAAM,QACnB,EACA,IAAMC,EAAW,IAAIC,EAAAA,SACrBlB,EAASO,QAAQY,UAAUF,GAC3BA,EAASG,MACT,IAAIf,EAAWD,OAAOC,SAmCtB,OAlCAN,EAAUQ,QAAU,IAAIc,WAA8B,SAAnBhB,EAASiB,SAAkB,QAAQ,UAAUjB,EAASC,KAAK,iBAE9FP,EAAUQ,QAAQgB,OAAS,WACvBvB,EAASO,QAAQiB,KAAK3B,EAAUU,SAChCP,EAASO,QAAQkB,QACjBzB,EAASO,QAAQmB,QAAO,SAACC,GACjB5B,EAAUQ,QAAQqB,KAAKD,EAC/B,IACA3B,EAASO,QAAQsB,UAAS,SAACC,GACvB5B,QAAQC,IAAI,UAAW2B,GAEvB/B,EAAUQ,QAAQqB,KAAKG,KAAKC,UAAU,CAAEC,OAAQH,IACpD,IAGA/B,EAAUQ,QAAQ2B,UAAY,SAACC,GAC3BnC,EAASO,QAAQS,MAAMmB,EAAMR,KACjC,EAGA5B,EAAUQ,QAAQ6B,QAAU,SAACD,GACzBnC,EAASO,QAAQ8B,QAAQ,2CACzBxE,EAAQsE,EAEZ,CAEJ,EAGApC,EAAUQ,QAAQ+B,QAAU,SAACC,GACzBvC,EAASO,QAAQ8B,QAAQ,sCAAoBE,EACjD,EAGO,WACCxC,EAAUQ,SACVR,EAAUQ,QAAQiC,QAElBxC,EAASO,SACTP,EAASO,QAAQkC,SAEzB,CACJ,GAAE,KACKrE,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UAAEC,EAAAA,EAAAA,KAACZ,EAAAA,SAAYkF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACtD,MAAM,gBAAS1B,GAAK,IAAAS,UACvCC,EAAAA,EAAAA,KAACuE,EAAAA,EAAS,CAAAxE,UACHC,EAAAA,EAAAA,KAACwE,EAAAA,EAAG,CAACjF,IAAKkC,EAAWgD,MAAM,QAAQC,OAAO,QACrCC,EAAG,UAKvB,C","sources":["components/CommonWindow.js","components/Shell.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext, forwardRef } from 'react';\nimport { styled } from '@mui/system';\n\nimport {\n    Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Paper,\n    TablePagination,\n    Container,\n    Box,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Modal\n} from '@mui/material';\nimport {\n    DesktopWindows, Settings, Notifications,\n    Close, Restore,\n    Menu,\n    Home,\n    ChevronLeft,\n    Maximize, Minimize\n} from '@mui/icons-material';\n\nimport { useData } from \"../store/global_data.js\";\n\n\nconst CommonWindow = forwardRef((props, ref) => {\n    const { onActive, onClose, onRestore, onMaximize, onMinimize } = props;\n    return <><AppBar sx={{ position: 'relative' }}>\n        <Toolbar\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '8px',\n            }}\n        >\n            <Typography variant=\"h6\" component=\"div\" sx={{\n                flexGrow: 1,\n                cursor: 'move',\n            }}\n                className=\"window-title\"\n                onClick={onActive}\n            >\n              {props.title}\n            </Typography>\n            <IconButton color=\"inherit\" onClick={onMinimize}>\n                <Minimize />\n            </IconButton>\n            {props.isMaximized ? (\n                <IconButton color=\"inherit\" onClick={onRestore}>\n                    <Restore />\n                </IconButton>\n            ) : (\n                <IconButton color=\"inherit\" onClick={onMaximize}>\n                    <Maximize />\n                </IconButton>\n            )}\n            <IconButton color=\"inherit\" onClick={onClose}>\n                <Close />\n            </IconButton>\n        </Toolbar>\n    </AppBar>\n        {props.children}\n    </>;\n\n});\n\nexport default CommonWindow;\n","import React, { useState, useEffect, useRef,useContext } from 'react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { AttachAddon} from 'xterm-addon-attach';\nimport 'xterm/css/xterm.css';\nimport 'xterm/lib/xterm.js';\nimport { styled } from '@mui/system';\nimport { \n         Container,\n         Box,\n       } from '@mui/material';\nimport CommonWindow from './CommonWindow';\n\nimport {\n    DesktopWindows, Settings, Notifications,\n    Close, Restore,\n    Menu,\n    Home,\n    ChevronLeft,\n    Maximize, Minimize\n} from '@mui/icons-material';\n\nlet socket = null;\nexport default function Shell(props) {\n    const shell_ref = useRef(null);\n    const websocket = useRef(null);\n    const terminal = useRef(null);\n    const { onActive, onClose, onRestore, onMaximize, onMinimize } = props;\n    useEffect(()=> {\n        console.log(\"api.init=====\", window.location.host);\n        terminal.current = new Terminal({\n            rendererType: 'canvas',\n            //rows: 40,\n            convertEol: true,\n            scrollback: 10,\n            disableStdin: false,\n            cursorStyle: 'underline',\n            cursorBlink: true\n        });\n        terminal.prompt = ()=> {\n            terminal.write('\\r\\n#');\n        };\n        const fitAddon = new FitAddon();\n        terminal.current.loadAddon(fitAddon);\n        fitAddon.fit();\n        let location = window.location;\n        websocket.current = new WebSocket((location.protocol==\"http:\"?\"ws://\":\"wss://\")+location.host+\"/api/ws/shell\");\n        // 在连接建立后，将 WebSocket 流导入到 xterm 终端中\n        websocket.current.onopen = () => {\n            terminal.current.open(shell_ref.current);\n            terminal.current.focus();\n            terminal.current.onData((data) => {\n                    websocket.current.send(data);\n            });\n            terminal.current.onResize((size) => {\n                console.log(\"size===\", size);\n                // 调整 xterm 和 WebSocket 的窗口大小\n                websocket.current.send(JSON.stringify({ resize: size }));\n            });\n\n            // 接收从服务器发送的数据并输出到 xterm 终端\n            websocket.current.onmessage = (event) => {\n                terminal.current.write(event.data);\n            };\n\n            // 处理关闭连接\n            websocket.current.onclose = (event) => {\n                terminal.current.writeln('WebSocket连接已关闭');\n                onClose(event);\n                // 可以在此处添加重连逻辑\n            };\n            //websocket.current.send(\"echo $PS1\\n\");\n        };\n\n        // 处理错误\n        websocket.current.onerror = (error) => {\n            terminal.current.writeln('WebSocket连接出错: ' + error);\n        };\n\n        // 清理资源\n        return () => {\n            if (websocket.current) {\n                websocket.current.close();\n            }\n            if (terminal.current) {\n                terminal.current.dispose();\n            }\n        };\n    },[]);\n    return <><CommonWindow title=\"终端\" {...props}>\n        <Container>\n               <Box ref={shell_ref} width=\"100vw\" height=\"100vh\"\n                    p={2}\n               />\n    </Container>\n             </CommonWindow>\n           </>;\n}\n"],"names":["CommonWindow","forwardRef","props","ref","onActive","onClose","onRestore","onMaximize","onMinimize","_jsxs","_Fragment","children","_jsx","AppBar","sx","position","Toolbar","display","alignItems","justifyContent","marginBottom","Typography","variant","component","flexGrow","cursor","className","onClick","title","IconButton","color","Minimize","isMaximized","Restore","Maximize","Close","Shell","shell_ref","useRef","websocket","terminal","useEffect","console","log","window","location","host","current","Terminal","rendererType","convertEol","scrollback","disableStdin","cursorStyle","cursorBlink","prompt","write","fitAddon","FitAddon","loadAddon","fit","WebSocket","protocol","onopen","open","focus","onData","data","send","onResize","size","JSON","stringify","resize","onmessage","event","onclose","writeln","onerror","error","close","dispose","_objectSpread","Container","Box","width","height","p"],"sourceRoot":""}