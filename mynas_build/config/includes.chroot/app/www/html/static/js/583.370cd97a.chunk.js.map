{"version":3,"file":"static/js/583.370cd97a.chunk.js","mappings":"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","sources":["components/BlockDevice.js","components/Pools.js","utils/bcachefs.js"],"sourcesContent":["import React, { useState, useEffect, useRef,useContext } from 'react';\n//import api from '../api';\nimport { styled } from '@mui/system';\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n       } from '@mui/material';\n\nimport {useData} from \"../store/global_data.js\";\n\n\nfunction BlockDevice(props){\n    const [disks, update_disks] = useState([]);\n    const [data, update_data] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [poolstatus, set_poolstatus] = useState({online:false,\n                                                   status_text: \"离线\"\n                                                  });\n    const [filter, setFilter] = useState('');\n    const filteredData = disks.filter((row) => {\n        return Object.values(row).some((value) => {\n            return value.toString().toLowerCase().includes(filter.toLowerCase());\n        });\n    });\n    const {global_data, api} = useData();\n    //disks = data;\n    //merger_data(global_data.get('sysstat', []));\n    useEffect(()=> {\n        let blockdevices = global_data.get('blockdevices');\n        let sysdata_update = (v)=> {\n            let blockdevices = global_data.get('blockdevices');\n            //let v = global_data.get('sysstat', []);\n            //Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd\n            let label = data;\n            let old_data = disks;\n            let status = v;//v.hosts[0].statistics[0].disk;\n            label.forEach(one=>{\n                let d = status.filter(v=>{\n                    if(one.path == `/dev/${v.Device}`) return true;\n                    return false;\n                })[0];\n                if(!blockdevices) return;\n                let block = blockdevices.filter(v=>v.path === one.path)[0];\n                if(d&&block) {\n                    let index = old_data.findIndex(v=>v.path == one.path);\n                    if(index >= 0) {\n                        old_data.splice(index, 1, {\n                            ...block,\n                            id: one.path,\n                            ...d\n                        });\n                    } else {\n                        old_data.push({\n                            ...block,\n                            id: one.path,\n                            ...d\n                        });\n                    }\n                }\n            });\n            update_disks([...old_data]);\n        };\n        //sysdata_update([]);\n        global_data.watch('sysstat', sysdata_update);\n        update_disks(data);\n        return ()=> {\n            global_data.unwatch('sysstat', sysdata_update);\n        };\n    },[data]);\n    useEffect(()=> {\n        console.log(\"props===\", props);\n        if(props.data)\n        update_data(props.data);\n    },[props.data]);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n    const handleEditClick = (parameter) => {\n    };\n    return <>\n         <TableContainer component={Paper}>\n           <Table>\n             <TableHead>\n               <TableRow>\n                 <TableCell>设备</TableCell>\n                 <TableCell>PATH</TableCell>\n                 <TableCell>标识</TableCell>\n                 <TableCell>容量</TableCell>\n                 <TableCell>读取</TableCell>\n                 <TableCell>写入</TableCell>\n               </TableRow>\n             </TableHead>\n             <TableBody>\n               {filteredData\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                    <TableRow key={row.path}>\n                      <TableCell>\n                        { props.onDown &&\n                        <Button onClick={() => props.onDown(row)}>下线</Button>\n                        }\n                        { props.onAdd&&props.check_add_status&&props.check_add_status(row) &&\n                          <Button onClick={() => props.onAdd(row)}>添加到池</Button>\n                        }\n                        { props.onRemove &&\n                        <Button onClick={() => props.onRemove(row)}>移除</Button>\n                        }\n                      </TableCell>\n                      <TableCell>{row.path}</TableCell>\n                      <TableCell>{row.model} {row.serial} {row.size}</TableCell>\n                      <TableCell>{row.size}</TableCell>\n                      <TableCell>{row[\"kB_read/s\"]}</TableCell>\n                      <TableCell>{row[\"kB_wrtn/s\"]}</TableCell>\n                    </TableRow>\n                ))}\n             </TableBody>\n           </Table>\n         </TableContainer>\n         <TablePagination\n           component=\"div\"\n           count={filteredData.length}\n           page={page}\n           onPageChange={handleChangePage}\n           rowsPerPage={rowsPerPage}\n           onRowsPerPageChange={handleChangeRowsPerPage}\n           style={{ marginTop: '1rem' }}\n         />\n       </>;\n};\n\nexport default BlockDevice;\n","import React, { useState, useEffect, useRef,useContext } from 'react';\nimport { styled } from '@mui/system';\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n       } from '@mui/material';\nimport bcachefs from '../utils/bcachefs.js';\nimport {useData} from \"../store/global_data.js\";\nimport BlockDevice from \"./BlockDevice\";\n\nfunction Pool(props) {\n    \n    let pool = props.data;\n    console.log(\"pool=\", pool);\n    const {global_data,api} = useData();\n    const [labels, update_labels] = useState([]);\n    useEffect(()=> {\n        update_labels(props.data.label);\n    },[props.data]);\n\n    let onDown = (row)=> {\n        console.log(\"down==\", row);\n    };\n    let onRemove = async (row)=> {\n        let ret = await api.run_command(bcachefs.device.evacuate({\n            device: row.path,\n            mount_path: pool.mount_path,\n        }));\n        if(ret.ret == 0) {\n            let remove_ret = await api.run_command(bcachefs.device.remove({\n                device: row.path,\n                mount_path: pool.mount_path,\n            }));\n            if(remove_ret.ret == 0) {\n                let index = pool.label.findIndex(v=>v.path == row.path);\n                if(index>=0) {\n                    pool.label.splice(index, 1);\n                }\n                let pools = global_data.get('pools');\n                index = pools.findIndex(v=>v.name === pool.name);\n                if(index>=0) {\n                    pools.splice(index,1,pool);\n                }\n                let write_ret = await api.config_file({filename:'config/pools.config', 'op':\"put\", data: JSON.stringify(pools)});\n                if(write_ret.ret == 0) {\n                    update_labels(pool.label);\n                    global_data.set('pools', pools);\n                }\n            }\n        }\n    };\n\n\n\n    let Status = ()=> {\n        const [poolstatus, set_poolstatus] = useState({online:false,\n                                                       status_text: \"离线\"\n                                                      });\n        let mount_status = async ()=> {\n            let mount_path = pool.mount_path;\n            let ret = await api.run_command(bcachefs.fs.usage(mount_path));\n            if(ret.ret == 0) {\n                let stdout = ret.data.stdout.split(`\\n`);\n                set_poolstatus({online: true,\n                                status_text: \"在线\"\n                               });\n            } else {\n                set_poolstatus({online: false,\n                                status_text: \"离线\"\n                               });\n            }\n        };\n        let mount = async (e)=> {\n            e.preventDefault();\n            let ret = await api.run_command(bcachefs.mount(pool));\n            await mount_status();\n\n        };\n\n        let umount = async (e)=> {\n            e.preventDefault();\n            let ret = await api.run_command(bcachefs.umount(pool));\n            await mount_status();\n        };\n        useEffect(()=> {\n            //setParameters(pool.label);\n            let timer = setInterval(()=> {\n                mount_status();\n            }, 60*1000);\n            mount_status();\n            return ()=> {\n                //global_data.unwatch('sysstate', sysdata_update);\n                clearInterval(timer);\n            };\n        },[]);\n        return <div>名称:{pool.name} 挂载位置: {pool.mount_path} 状态:\n                 {poolstatus.online &&\n                  <Button onClick={umount}>卸载</Button>\n                 }\n                 {!poolstatus.online &&\n                  <Button onClick={mount}>挂载</Button>\n                 }</div>;\n    };\n\n    return <div>\n             <Status/>\n             <BlockDevice data={labels} onDown={onDown} onRemove={onRemove}/>;\n        </div>;\n};\n\nexport default Pool;\n","const bcachefs = {\n    command: \"bcachefs\",\n\n    fs: {\n        usage(path) {\n            let args = [];\n            args.push(\"fs\");\n            args.push(\"usage\");\n            args.push(path);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        }\n    },\n    device: {\n        remove(config) {\n            let args = [];\n            args.push('device');\n            args.push('remove');\n            args.push(config.device);\n            args.push(config.mount_path);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        add(config) {\n            let args = [];\n            args.push('device');\n            args.push('add');\n            config.label && config.label != '' && args.push(`--label=${config.label}`);\n            config.fs_size && config.fs_size != '' && args.push(`--fs_size=${config.fs_size}`);\n            config.discard && config.discard == true && args.push(`--discard`);\n            config.bucket && config.bucket != '' && args.push(`--bucket=${config.bucket}`);\n            args.push(config.mount_path);\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        online(config) {\n            let args = [];\n            args.push('device');\n            args.push('online');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        offline(config) {\n            let args = [];\n            args.push('device');\n            args.push('offline');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        evacuate(config) {\n            let args = [];\n            args.push('device');\n            args.push('evacuate');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        }\n    },\n    format(config) {\n        let args = [];\n        args.push(\"format\");\n        args.push(`--compression=${config['compression']}`);\n        if(config[\"encrypted\"]) args.push(\"--encrypted\");\n        args.push(`--foreground_target=${config['foreground_target']}`);\n        args.push(`--promote_target=${config['promote_target']}`);\n        args.push(`--background_target=${config['background_target']}`);\n        args.push(`--replicas=${config['replicas']}`);\n        for(let disk of config['label']) {\n            args.push(`--label=${disk.name}`);\n            args.push(`${disk.path}`);\n        }\n        return {\n            command: this.command,\n            args\n        };\n    },\n    list(config) {\n        let args = [];\n        args.push(\"list\");\n        args.push(config['path']);\n        return {\n            command: this.command,\n            args\n        };\n    },\n    list_journal(config) {\n        let args = [];\n        args.push(\"list_journal\");\n        args.push(config['path']);\n        return {\n            command: this.command,\n            args\n        };\n    },\n    mount(config) {\n        let args = [];\n        args.push(\"-t\");\n        args.push(\"bcachefs\");\n        args.push(config['label'].map(v=>v.path).join(':'));\n        args.push(config.mount_path);\n        return {\n            command: \"mount\",\n            args\n        };\n    },\n    umount(config) {\n        let args = [];\n        args.push(config.mount_path);\n        return {\n            command: \"umount\",\n            args\n        };\n\n    }\n};\n\nexport default bcachefs;\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","disks","update_disks","_useState3","_useState4","data","update_data","_useState5","_useState6","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","online","status_text","_useState12","_useState13","_useState14","filter","filteredData","row","Object","values","some","value","toString","toLowerCase","includes","_useData","useData","global_data","api","useEffect","get","sysdata_update","v","blockdevices","old_data","status","forEach","one","d","path","concat","Device","block","index","findIndex","splice","_objectSpread","id","push","_toConsumableArray","watch","unwatch","console","log","_jsxs","_Fragment","children","_jsx","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","map","onDown","Button","onClick","onAdd","check_add_status","onRemove","model","serial","size","TablePagination","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","style","marginTop","pool","labels","update_labels","label","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pools","wrap","_context","prev","next","run_command","bcachefs","device","mount_path","sent","ret","name","config_file","filename","JSON","stringify","set","stop","_x","apply","arguments","Status","poolstatus","set_poolstatus","mount_status","_ref2","_callee2","_context2","stdout","split","mount","_ref3","_callee3","e","_context3","preventDefault","_x2","umount","_ref4","_callee4","_context4","_x3","timer","setInterval","clearInterval","BlockDevice","command","fs","usage","args","remove","config","add","fs_size","discard","bucket","offline","evacuate","format","_step","_iterator","_createForOfIteratorHelper","s","n","done","disk","err","f","this","list","list_journal","join"],"sourceRoot":""}