{"version":3,"file":"static/js/806.9630cccb.chunk.js","mappings":"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","sources":["utils/docker.js"],"sourcesContent":["import api from '../api';\nimport {init_data} from \"../store/global_data.js\";\n\nfunction long_cmd(command, callback = { stdout: null, stderr: null, onerr: null, onend: null }) {\n    let location = window.location;\n    let args = command;/*{\n        \"command\": \"/bin/bash\",\n        \"args\": [\"-c\", `cd ${config.dir} && docker compose up -d`]\n    };*/\n    let args_s = encodeURIComponent(JSON.stringify(args));\n    let socket = new WebSocket((location.protocol == \"http:\" ? \"ws://\" : \"wss://\") + location.host + \"/api/ws/shell?args=\" + args_s);\n    socket.onopen = () => {\n        socket.onclose = () => {\n            socket = null;\n            if (callback.onend) {\n                callback.onend();\n            }\n        };\n        socket.onmessage = (event) => {\n            console.log(event.data);\n            if (callback.stdout) {\n                callback.stdout(event.data);\n            }\n        };\n    };\n    socket.onerror = (err) => {\n        if (callback.onerr) {\n            callback.onerr(err);\n        }\n        socket = null;\n    };\n\n}\nconst docker = {\n    docker_config: './docker',\n    async get_config(config) {\n        let dir = `${this.docker_config}/${config.title}`;\n        let mkdir_ret = await this.mkdir(dir);\n        let env_file = await api.config_file({\n            op: 'get',\n            filename: `${dir}/.env`,\n        });\n        let docker_compose = await api.config_file({\n            op: 'get',\n            filename: `${dir}/docker-compose.yml`,\n            data: config.config\n        });\n        if(env_file.ret == 0 && docker_compose.ret == 0) {\n            return {\n                ret:0,\n                env: env_file,\n                compose: docker_compose\n            };\n        } else {\n            return {\n                ret: -2,\n                env: env_file,\n                compose: docker_compose\n            };\n        }\n    },\n    stop_container(config, callback={stdout:null, stderr:null, onerr:null}) {\n        let location = window.location;\n        let args = {\n            \"command\": \"/bin/bash\",\n            \"args\":[\"-c\", `cd ${config.dir} && docker compose stop`]\n        };\n        let args_s = encodeURIComponent(JSON.stringify(args));\n        let socket = new WebSocket((location.protocol==\"http:\"?\"ws://\":\"wss://\")+location.host+\"/api/ws/shell?args=\"+args_s);\n        socket.onopen = () => {\n            socket.onclose = ()=> {\n                socket = null;\n            };\n            socket.onmessage = (event)=> {\n                console.log(event.data);\n                if(callback.stdout) {\n                    callback.stdout(event.data);\n                }\n            };\n        };\n        socket.onerror = (err)=> {\n            if(callback.onerr) {\n                callback.onerr(err);\n            }\n            socket = null;\n        };\n    },\n    start_container(config, callback={stdout:null, stderr:null, onerr:null}) {\n        let location = window.location;\n        let args = {\n            \"command\": \"/bin/bash\",\n            \"args\":[\"-c\", `cd ${config.dir} && docker compose up -d`]\n        };\n        let args_s = encodeURIComponent(JSON.stringify(args));\n        let socket = new WebSocket((location.protocol==\"http:\"?\"ws://\":\"wss://\")+location.host+\"/api/ws/shell?args=\"+args_s);\n        socket.onopen = () => {\n            socket.onclose = ()=> {\n                socket = null;\n            };\n            socket.onmessage = (event)=> {\n                console.log(event.data);\n                if(callback.stdout) {\n                    callback.stdout(event.data);\n                }\n            };\n        };\n        socket.onerror = (err)=> {\n            if(callback.onerr) {\n                callback.onerr(err);\n            }\n            socket = null;\n        };\n    },\n    async mkdir(dir) {\n        let p = {\n            command: \"mkdir\",\n            args:[\"-p\", dir]\n        };\n        return await api.run_command(p);\n    },\n    async save_config(config) {\n        let dir = `${this.docker_config}/${config.title}`;\n        let mkdir_ret = await this.mkdir(dir);\n        let env_file = await api.config_file({\n            op: 'put',\n            filename: `${dir}/.env`,\n            data: config.env\n        });\n        let docker_compose = await api.config_file({\n            op: 'put',\n            filename: `${dir}/docker-compose.yml`,\n            data: config.config\n        });\n        if(env_file.ret == 0 && docker_compose.ret == 0) {\n            return {\n                ret:0,\n                env: env_file,\n                compose: docker_compose\n            };\n        } else {\n            return {\n                ret: -2,\n                env: env_file,\n                compose: docker_compose\n            };\n        }\n    },\n    async start() {\n    },\n    async stop() {\n    },\n    async list() {\n    },\n    async list_all() {\n        let p = {\n            command: \"docker\",\n            args:[\"ps\", \"-a\"]\n        };\n        return await api.run_command(p);\n    },\n    install(callback = { stdout: null, stderr: null, onerr: null, onend: null }) {\n        long_cmd({\n            \"command\": \"./scripts/install_docker_debian.sh\",\n            args: [\"docker\"],\n        }, callback);\n\n        /*\n        return new Promise(async (resolve, reject)=> {\n            let p = {\n                command: {\n                    \"command\":\"./scripts/install_docker_debian.sh\",\n                    args:[\"docker\"],\n                },\n                key: 'install_docker',\n                'type': 'command',\n            };\n            init_data.watch('install_docker', (v)=> {\n                console.log(\"install_docker===\", v);\n                init_data.unwatch(\"install_docker\");\n                if(v.ret != 0) {\n                    reject(v);\n                } else {\n                    resolve(v);\n                }\n            });\n            await api.proc_command(p);\n        });\n        */\n    },\n    async check_install() {\n        let p = {\n            command: \"which\",\n            args:[\"docker\"]\n        };\n        return await api.run_command(p);\n    },\n};\n\nexport default docker;\n"],"names":["docker","docker_config","get_config","config","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dir","env_file","docker_compose","wrap","_context","prev","next","concat","title","mkdir","sent","api","op","filename","data","ret","abrupt","env","compose","stop","stop_container","callback","arguments","length","undefined","stdout","stderr","onerr","location","window","args","args_s","encodeURIComponent","JSON","stringify","socket","WebSocket","protocol","host","onopen","onclose","onmessage","event","console","log","onerror","err","start_container","_callee2","p","_context2","command","save_config","_this2","_callee3","_context3","start","_callee4","_context4","_callee5","_context5","list","_callee6","_context6","list_all","_callee7","_context7","install","onend","long_cmd","check_install","_callee8","_context8"],"sourceRoot":""}