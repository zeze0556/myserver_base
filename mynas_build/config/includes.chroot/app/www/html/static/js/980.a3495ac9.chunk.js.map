{"version":3,"file":"static/js/980.a3495ac9.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Close.js","../AttachAddon/webpack/universalModuleDefinition","../AttachAddon/src/AttachAddon.ts","../FitAddon/webpack/universalModuleDefinition","../FitAddon/src/FitAddon.ts","../xterm/webpack/universalModuleDefinition","../xterm/src/browser/AccessibilityManager.ts","../xterm/src/browser/Clipboard.ts","../xterm/src/browser/ColorContrastCache.ts","../xterm/src/browser/Lifecycle.ts","../xterm/src/browser/Linkifier2.ts","../xterm/src/browser/LocalizableStrings.ts","../xterm/src/browser/OscLinkProvider.ts","../xterm/src/browser/RenderDebouncer.ts","../xterm/src/browser/ScreenDprMonitor.ts","../xterm/src/browser/Terminal.ts","../xterm/src/browser/TimeBasedDebouncer.ts","../xterm/src/browser/Viewport.ts","../xterm/src/browser/decorations/BufferDecorationRenderer.ts","../xterm/src/browser/decorations/ColorZoneStore.ts","../xterm/src/browser/decorations/OverviewRulerRenderer.ts","../xterm/src/browser/input/CompositionHelper.ts","../xterm/src/browser/input/Mouse.ts","../xterm/src/browser/input/MoveToCell.ts","../xterm/src/browser/renderer/dom/DomRenderer.ts","../xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","../xterm/src/browser/renderer/dom/WidthCache.ts","../xterm/src/browser/renderer/shared/Constants.ts","../xterm/src/browser/renderer/shared/RendererUtils.ts","../xterm/src/browser/selection/SelectionModel.ts","../xterm/src/browser/services/CharSizeService.ts","../xterm/src/browser/services/CharacterJoinerService.ts","../xterm/src/browser/services/CoreBrowserService.ts","../xterm/src/browser/services/MouseService.ts","../xterm/src/browser/services/RenderService.ts","../xterm/src/browser/services/SelectionService.ts","../xterm/src/browser/services/Services.ts","../xterm/src/browser/services/ThemeService.ts","../xterm/src/common/CircularList.ts","../xterm/src/common/Clone.ts","../xterm/src/common/Color.ts","../xterm/src/common/CoreTerminal.ts","../xterm/src/common/EventEmitter.ts","../xterm/src/common/InputHandler.ts","../xterm/src/common/Lifecycle.ts","../xterm/src/common/MultiKeyMap.ts","../xterm/src/common/Platform.ts","../xterm/src/common/SortedList.ts","../xterm/src/common/TaskQueue.ts","../xterm/src/common/WindowsMode.ts","../xterm/src/common/buffer/AttributeData.ts","../xterm/src/common/buffer/Buffer.ts","../xterm/src/common/buffer/BufferLine.ts","../xterm/src/common/buffer/BufferRange.ts","../xterm/src/common/buffer/BufferReflow.ts","../xterm/src/common/buffer/BufferSet.ts","../xterm/src/common/buffer/CellData.ts","../xterm/src/common/buffer/Constants.ts","../xterm/src/common/buffer/Marker.ts","../xterm/src/common/data/Charsets.ts","../xterm/src/common/data/EscapeSequences.ts","../xterm/src/common/input/Keyboard.ts","../xterm/src/common/input/TextDecoder.ts","../xterm/src/common/input/UnicodeV6.ts","../xterm/src/common/input/WriteBuffer.ts","../xterm/src/common/input/XParseColor.ts","../xterm/src/common/parser/Constants.ts","../xterm/src/common/parser/DcsParser.ts","../xterm/src/common/parser/EscapeSequenceParser.ts","../xterm/src/common/parser/OscParser.ts","../xterm/src/common/parser/Params.ts","../xterm/src/common/public/AddonManager.ts","../xterm/src/common/public/BufferApiView.ts","../xterm/src/common/public/BufferLineApiView.ts","../xterm/src/common/public/BufferNamespaceApi.ts","../xterm/src/common/public/ParserApi.ts","../xterm/src/common/public/UnicodeApi.ts","../xterm/src/common/services/BufferService.ts","../xterm/src/common/services/CharsetService.ts","../xterm/src/common/services/CoreMouseService.ts","../xterm/src/common/services/CoreService.ts","../xterm/src/common/services/DecorationService.ts","../xterm/src/common/services/InstantiationService.ts","../xterm/src/common/services/LogService.ts","../xterm/src/common/services/OptionsService.ts","../xterm/src/common/services/OscLinkService.ts","../xterm/src/common/services/ServiceRegistry.ts","../xterm/src/common/services/Services.ts","../xterm/src/common/services/UnicodeService.ts","../xterm/webpack/bootstrap","../xterm/src/browser/public/Terminal.ts","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AttachAddon\"] = factory();\n\telse\n\t\troot[\"AttachAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2014, 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * Implements the attach method, that attaches the terminal to a WebSocket stream.\n */\n\nimport { Terminal, IDisposable, ITerminalAddon } from 'xterm';\n\ninterface IAttachOptions {\n  bidirectional?: boolean;\n}\n\nexport class AttachAddon implements ITerminalAddon {\n  private _socket: WebSocket;\n  private _bidirectional: boolean;\n  private _disposables: IDisposable[] = [];\n\n  constructor(socket: WebSocket, options?: IAttachOptions) {\n    this._socket = socket;\n    // always set binary type to arraybuffer, we do not handle blobs\n    this._socket.binaryType = 'arraybuffer';\n    this._bidirectional = !(options && options.bidirectional === false);\n  }\n\n  public activate(terminal: Terminal): void {\n    this._disposables.push(\n      addSocketListener(this._socket, 'message', ev => {\n        const data: ArrayBuffer | string = ev.data;\n        terminal.write(typeof data === 'string' ? data : new Uint8Array(data));\n      })\n    );\n\n    if (this._bidirectional) {\n      this._disposables.push(terminal.onData(data => this._sendData(data)));\n      this._disposables.push(terminal.onBinary(data => this._sendBinary(data)));\n    }\n\n    this._disposables.push(addSocketListener(this._socket, 'close', () => this.dispose()));\n    this._disposables.push(addSocketListener(this._socket, 'error', () => this.dispose()));\n  }\n\n  public dispose(): void {\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n  }\n\n  private _sendData(data: string): void {\n    if (!this._checkOpenSocket()) {\n      return;\n    }\n    this._socket.send(data);\n  }\n\n  private _sendBinary(data: string): void {\n    if (!this._checkOpenSocket()) {\n      return;\n    }\n    const buffer = new Uint8Array(data.length);\n    for (let i = 0; i < data.length; ++i) {\n      buffer[i] = data.charCodeAt(i) & 255;\n    }\n    this._socket.send(buffer);\n  }\n\n  private _checkOpenSocket(): boolean {\n    switch (this._socket.readyState) {\n      case WebSocket.OPEN:\n        return true;\n      case WebSocket.CONNECTING:\n        throw new Error('Attach addon was loaded before socket was open');\n      case WebSocket.CLOSING:\n        console.warn('Attach addon socket is closing');\n        return false;\n      case WebSocket.CLOSED:\n        throw new Error('Attach addon socket is closed');\n      default:\n        throw new Error('Unexpected socket state');\n    }\n  }\n}\n\nfunction addSocketListener<K extends keyof WebSocketEventMap>(socket: WebSocket, type: K, handler: (this: WebSocket, ev: WebSocketEventMap[K]) => any): IDisposable {\n  socket.addEventListener(type, handler);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      socket.removeEventListener(type, handler);\n    }\n  };\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["createSvgIcon","_jsx","d","self","module","exports","s","e","t","addEventListener","dispose","removeEventListener","AttachAddon","_class","_classCallCheck","_disposables","this","_socket","binaryType","_bidirectional","bidirectional","_createClass","key","value","_this","push","data","write","Uint8Array","onData","_sendData","onBinary","_sendBinary","_step","_iterator","_createForOfIteratorHelper","n","done","err","f","_checkOpenSocket","send","length","charCodeAt","readyState","WebSocket","OPEN","CONNECTING","Error","CLOSING","console","warn","CLOSED","FitAddon","_terminal","proposeDimensions","isNaN","cols","rows","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","height","r","options","scrollback","viewport","scrollBarWidth","i","window","getComputedStyle","o","parseInt","getPropertyValue","Math","max","l","a","floor","h","c","_","AccessibilityManager","_h$Disposable","_inherits","_super","_createSuper","call","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityContainer","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_handleBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","_assertThisInitialized","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","_handleChar","onLineFeed","onA11yTab","_handleTab","onKey","_handleKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","toDisposable","remove","_this2","shift","textContent","tooMuchOutput","isMac","parentNode","setTimeout","test","refresh","buffer","lines","toString","translateBufferLineToString","ydisp","innerText","_announceCharacters","target","getAttribute","concat","relatedTarget","pop","removeChild","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","style","canvas","Disposable","IRenderService","replace","decPrivateModes","bracketedPasteMode","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","getBoundingClientRect","clientX","left","clientY","top","zIndex","prepareTextForTerminal","bracketTextForPaste","copyHandler","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","paste","moveTextAreaUnderMouseCursor","rightClickHandler","rightClickSelect","select","ColorContrastCache","_class2","_color","TwoKeyMap","_css","set","get","Linkifier2","_a$Disposable","_class3","_super2","_this3","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_clearCurrentLink","_currentLink","_this4","indexOf","splice","_this5","_element","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","_this6","_activeProviderReplies","forEach","Map","entries","_loop","_step$value","_slicedToArray","_checkLinkProviderResult","provideLinks","map","size","_removeIntersectingLinks","Set","range","has","_this7","find","_handleNewLink","_mouseDownLink","activate","text","_linkLeave","disposeArray","_this8","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","_createLinkUnderlineEvent","fire","leave","getCoords","x1","y1","x2","y2","fg","IBufferService","promptLabel","OscLinkProvider","_class4","_optionsService","_oscLinkService","linkHandler","CellData","getTrimmedLength","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","allowNonHttpProtocols","URL","includes","protocol","confirm","open","opener","location","href","IOptionsService","IOscLinkService","RenderDebouncer","_class5","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","_this9","requestAnimationFrame","_innerRefresh","_this10","_rowCount","_rowStart","min","_rowEnd","_runRefreshCallbacks","_step2","_iterator2","_s$Disposable","_super3","_this11","_currentDevicePixelRatio","devicePixelRatio","clearListener","_this12","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","u","v","p","g","m","S","C","b","w","E","k","L","D","R","A","B","T","M","O","P","_y$CoreTerminal","_super4","_this13","arguments","undefined","browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","registerLinkProvider","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_this14","_themeService","_step3","_iterator3","_loop2","index","type","color","toColorRGB","colors","ansi","coreService","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","_b$rgba","rgba","toColor","apply","_toConsumableArray","_b$rgba2","restoreColor","_get","_getPrototypeOf","prototype","buffers","active","textarea","preventScroll","sendFocus","updateCursorStyle","_showCursor","blur","isCursorInViewport","_compositionHelper","isComposing","ybase","getWidth","lineHeight","_this15","_bindKeys","hasSelection","_selectionService","optionsService","isFirefox","button","screenElement","rightClickSelectsWord","isLinux","_this16","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_this17","isConnected","_logService","debug","_document","ownerDocument","dir","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_handleTextAreaFocus","_handleTextAreaBlur","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","_syncTextArea","handleResize","handleBlur","onFocus","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","attachToDom","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","_handleScreenReaderModeOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","_initGlobal","bindMouse","DomRenderer","_this18","getMouseReportCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","action","ctrl","ctrlKey","alt","altKey","shiftKey","mouseup","wheel","mousedrag","mousemove","cancel","onProtocolChange","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","applicationCursorKeys","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","deregister","markers","addMarker","registerDecoration","setSelection","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","_isThirdLevelShift","metaKey","ETX","CR","domEvent","isWindows","getModifierState","keyCode","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","position","source","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","toFixed","GET_CELL_SIZE_PIXELS","cancelEvents","CoreTerminal","Terminal","_class6","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","_this19","Date","now","_h$Disposable2","_class7","_super5","_this20","_scrollArea","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_this21","_this22","device","dpr","offsetHeight","round","scrollTop","_refresh","offsetParent","_this23","_isDisposed","_smoothScrollPercent","_smoothScroll","_clearSmoothScrollState","smoothScrollDuration","cancelable","_getPixelsScrolled","scrollHeight","_bubbleScroll","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","isWrapped","translateToString","bufferElements","cursorElement","DOM_DELTA_PIXEL","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_a$Disposable2","_class8","_super6","_this24","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","_removeDecoration","_this25","addRefreshCallback","_step4","_iterator4","_renderDecoration","_refreshStyle","_refreshXPosition","layer","marker","line","display","_this26","onRenderEmitter","_createElement","onDispose","delete","anchor","right","ColorZoneStore","_class9","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","overviewRulerOptions","_step5","_iterator5","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","_h$Disposable3","_class10","_super7","_this27","_coreBrowseService","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_this28","_this29","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_this30","_containerHeight","clientHeight","ceil","setPadding","_width","_refreshDrawConstants","clearRect","_step6","_iterator6","addDecoration","lineWidth","_step7","zones","_iterator7","_renderColorZone","_step8","_iterator8","fillStyle","fillRect","_this31","_refreshDecorations","_class11","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_this32","_finalizeComposition","_handleAnyTextareaChanges","_this33","substring","_this34","DEL","_this35","fontFamily","fontSize","ICoreService","getCoordsRelativeToElement","moveToCellSequence","_$Disposable","_class12","_super8","_this36","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","char","letterSpacing","_step9","_iterator9","overflow","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","_step10","_iterator10","_step10$value","INVERTED_DEFAULT_COLOR","opaque","defaultSpacing","renderRows","replaceChildren","_createSelectionElement","_step11","_iterator11","cursorBlink","cursorStyle","cursorInactiveStyle","createRow","_setCellUnderline","IInstantiationService","_class13","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","_this37","getJoinedCharacters","getNoBgTrimmedLength","_loop3","_M","I","JoinedCellData","H","_isCellInSelection","F","W","U","forEachDecorationAtCell","N","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","bg","selectionForeground","ext","isCursorHidden","isFocused","isDim","isInvisible","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","$","getFgColor","j","getFgColorMode","z","getBgColor","K","getBgColorMode","q","isInverse","V","G","X","J","backgroundColorRGB","foregroundColorRGB","_addStyle","_applyMinimumContrast","className","minimumContrastRatio","excludeFromContrastRatioDemands","getCode","_getContrastCache","getColor","ensureContrastRatio","setColor","halfContrastCache","contrastCache","_class14","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","fontStyle","body","_holey","fill","_measure","repeat","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","throwIfFalsy","isPowerlineGlyph","isRestrictedPowerlineGlyph","SelectionModel","_class15","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","_a$Disposable3","_class16","_super9","_this38","_onCharSizeChange","onCharSizeChange","_measureStrategy","onMultipleOptionChange","_parentElement","_result","_measureElement","Number","_n$AttributeData","_super10","_this39","content","combinedData","_characterJoiners","_nextCharacterJoinerId","id","handler","getFg","getBg","_getJoinedRanges","error","_mergeRanges","_stringRangesToCellRanges","getString","_class17","_this40","_isFocused","_cachedIsFocused","_this41","hasFocus","queueMicrotask","_class18","_l$Disposable","_class19","_super11","_this42","_renderer","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","handleDevicePixelRatioChange","_fullRefresh","handleCharSizeChanged","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","_possibleConstructorReturn","isIntersecting","intersectionRatio","flush","_fireOnCanvasResize","_this43","_this44","RegExp","_l$Disposable2","_class20","_super12","_this45","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","_this46","_getMouseBufferCoords","_areCoordsInSelection","currentLink","getRangeLength","_selectWordAt","handleTrim","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_this47","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectWordAtCursor","_selectLineAt","_selectToWordAt","_getMouseEventScrollAmount","altClickMovesCursor","_fireEventIfSelectionChanged","_fireOnSelectionChange","_this48","_isClickInSelection","_convertViewportColToCharacterIndex","charAt","_isCharWordSeparator","slice","trim","getCodePoint","_getWordAt","wordSeparator","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_ANSI_COLORS","freeze","channels","toCss","toRgba","_h$Disposable4","_class21","_super13","_this49","_contrastCache","_halfContrastCache","_onChangeColors","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","_restoreColor","_restoreColors","_r$Disposable","_super14","_this50","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","_getCyclicIndex","CircularList","clone","isArray","_$toChannels","_$toChannels2","toChannels","_$toChannels3","_$toChannels4","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","_t$getImageData$data","match","parseFloat","getImageData","pow","relativeLuminance","relativeLuminance2","rgb","reduceLuminance","increaseLuminance","toPaddedHex","contrastRatio","_s$Disposable2","_super15","_this51","_windowsWrappingHeuristics","_onBinary","_onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","parse","_this52","_onScrollApi","LogLevelEnum","WARN","writeSync","MINIMUM_COLS","MINIMUM_ROWS","scroll","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","_this53","updateWindowsModeWrappedState","final","_i20","_e68","_class22","_listeners","_disposed","_this54","_event","clearListeners","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_h$Disposable5","_super16","_this55","EscapeSequenceParser","_coreMouseService","_unicodeService","_parser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","setCsiHandlerFallback","identifier","identToString","params","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","_loop4","_e70","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","Promise","race","catch","_logSlowResolvingAsync","DEBUG","split","clearRange","decode","subarray","_preserveStack","charset","wraparound","modes","insertMode","markDirty","setCellFromCodePoint","wcwidth","stringFromCodePoint","_getCurrentLinkId","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","isCombined","_this56","convertEol","reverseWraparound","_restrictCursor","nextStop","_setCursor","_moveCursor","tabs","prevStop","replaceCells","clearMarkers","_eraseInBufferLine","_resetBufferLine","trimStart","deleteCells","_is","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_this$_coreMouseServi","_this$_bufferService","fromColorRGB","hasSubParams","getSubParams","_updateAttrColor","underlineColor","updateExtended","_processSGR0","_processUnderline","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","exec","parseColor","_createHyperlink","_finishHyperlink","findIndex","startsWith","registerLink","_setOrReportSpecialColor","shiftElements","markAllDirty","_this57","isProtected","block","bar","_step12","_iterator12","_class23","_step13","_iterator13","_class24","_value","_data","FourKeyMap","_class25","navigator","userAgent","platform","isSafari","getSafariVersion","isIpad","isIphone","SortedList","_class26","_getKey","_search","_regeneratorRuntime","mark","getKeyIterator","wrap","_context","prev","next","stop","values","_tasks","_i","_start","_idleCallback","_cancelCallback","_requestCallback","_process","timeRemaining","_r15","_super17","_this58","_createDeadline","PriorityTaskQueue","IdleTaskQueue","_r16","_class27","_super18","requestIdleCallback","cancelIdleCallback","_class28","_queue","enqueue","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","isEmpty","isFgRGB","isFgPalette","isFgDefault","_ext","_urlId","ExtendedAttrs","MAX_BUFFER_SIZE","Buffer","_class29","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","BufferLine","maxLength","_this59","_isReflowEnabled","_reflow","_batchedMemoryCleanup","cleanupMemory","_reflowLarger","_reflowSmaller","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","reflowSmallerGetNewLineLengths","newLines","copyCellsFrom","getWrappedLineTrimmedLength","setCell","tabStopWidth","_this60","Marker","_removeMarker","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","byteLength","keys","reduce","_r$Disposable2","_super19","_this61","_onBufferActivate","_normal","fillViewportRows","_alt","inactiveBuffer","BufferSet","_n$AttributeData2","_super20","_this62","setFromCharData","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","Q","Y","Z","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","toUpperCase","toLowerCase","utf32ToString","_class30","_interim","_class31","interim","UnicodeV6","_class32","version","_r$Disposable3","_super21","_this63","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","_this64","_innerWrite","_this65","resolve","then","_e114","PAYLOAD_LIMIT","DcsParser","_class33","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","unhook","hook","put","Params","addParam","_class34","_handler","_params","_hitLimit","_this66","table","TransitionTable","VT500_TRANSITION_TABLE","setDefault","addMany","_s$Disposable3","_super22","_this67","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","reverse","_identifier","registerHandler","clearHandler","setHandlerFallback","collect","abort","addSubParam","addDigit","_class35","_state","_put","_class36","_this68","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","AddonManager","_class37","_addons","instance","_this69","_wrappedAddonDispose","BufferApiView","_class38","_buffer","BufferLineApiView","_class39","_line","_n$Disposable","_super23","_this70","_onBufferChange","onBufferChange","_alternate","alternate","init","BufferNamespaceApi","ParserApi","_class40","UnicodeApi","_class41","versions","activeVersion","_o$Disposable","_class42","_super24","_this71","isUserScrolling","_cachedBlankLine","isFull","recycle","copyFrom","_class43","glevel","_charsets","NONE","events","restrict","X10","VT200","DRAG","ANY","DEFAULT","SGR","SGR_PIXELS","_a$Disposable4","_class44","_super25","_this72","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","_i51","_Object$keys","addProtocol","_i52","_Object$keys2","addEncoding","_equalEvents","triggerBinaryEvent","down","up","drag","move","_a$Disposable5","_class45","_super26","_this73","_onUserInput","_onRequestScrollToBottom","disableStdin","_n$Disposable2","_super27","_this74","_decorations","_onDecorationRegistered","_onDecorationRemoved","_this75","insert","_step14","_iterator14","getDecorationsAtCell","_iterator15","_step15","_h9","_context2","t0","t1","finish","forEachByKey","_n$Disposable3","_super28","_this76","_cachedBg","_cachedFg","foregroundColor","_entries","_len","_key","_i53","_e127","_e127$_i","_step16","_iterator16","_step16$value","ServiceCollection","_class46","_services","_step17","getServiceDependencies","sort","_iterator17","name","_len2","_key2","_construct","trace","TRACE","info","INFO","ERROR","off","OFF","_n$Disposable4","_class47","_super29","_this77","_logLevel","_updateLogLevel","_evalLazyOptionalParams","logger","_len3","_key3","_log","log","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","setTraceLogger","traceCall","_len8","_key8","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","_r$Disposable4","_super30","_this78","_onOptionChange","assign","_sanitizeAndValidateOption","_setupOptions","_this79","_this80","defineProperty","_class48","_entriesWithId","_dataByLinkId","_this81","_removeMarkerFromLink","_getEntryIdKey","_this82","every","serviceRegistry","_class49","_providers","_onChange","onChange","_activeProvider","_n$Disposable5","_super31","_this83","_addonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","applicationCursorKeysMode","applicationKeypadMode","mouseTrackingMode","originMode","reverseWraparoundMode","sendFocusMode","wraparoundMode","_verifyIntegers","attachCustomKeyEventHandler","registerCharacterJoiner","deregisterCharacterJoiner","registerMarker","_verifyPositiveIntegers","getSelection","getSelectionPosition","scrollPages","scrollToTop","scrollToLine","loadAddon","_len9","_key9","_i59","_e131","_len10","_key10","_i60","_e132","arrayLikeToArray","arr","__esModule","setPrototypeOf","isNativeReflectConstruct","Parent","args","Class","Reflect","construct","Function","unsupportedIterableToArray","allowArrayLike","it","Symbol","iterator","_e","TypeError","normalCompletion","didErr","step","_e2","superPropBase","property","receiver","base","desc","getOwnPropertyDescriptor","iter","from","_typeof","Op","hasOwn","hasOwnProperty","obj","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","constructor","__proto__","awrap","async","val","object","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","arrayWithoutHoles","iterableToArray","nonIterableSpread"],"sourceRoot":""}