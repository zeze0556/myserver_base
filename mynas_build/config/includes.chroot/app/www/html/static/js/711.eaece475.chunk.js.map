{"version":3,"file":"static/js/711.eaece475.chunk.js","mappings":"8PAMIA,EAAQ,CACR,KAAQ,CACJ,SAAY,YACZC,KAAM,sBAEV,QAAW,CACP,SAAY,YACZA,KAAM,yBAGV,MAAS,CACL,SAAY,YACZA,KAAM,uBAGV,MAAS,CACL,SAAY,YACZA,KAAM,wBAyDd,UArDA,WACI,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA8BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GACpCE,GADMD,EAAA,GAAcA,EAAA,IACNE,EAAAA,EAAAA,YAAWC,EAAAA,cAC3BC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,EAAAA,EAAAA,KAAW,iBAAiB,KAAD,EAA5CN,EAAQG,EAAAI,KAEA,IADVN,EAAMD,EAASQ,MACZP,KACHV,EAAYkB,IAAI,OAAQ,CAACC,SAAUT,EAAIO,KAAKE,WAC/C,wBAAAP,EAAAQ,OAAA,GAAAZ,EAAA,KACJ,kBANc,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,MAOfC,EAAAA,EAAAA,YAAU,WACN,IAAIC,EAAI,SAACC,GACL5B,EAAc,OAClB,EAGA,OAFAG,EAAY0B,MAAM,OAAQF,GAC1BrB,IACO,WACHH,EAAY2B,QAAQ,OAAQH,EAChC,CACJ,GAAE,IACF,IAAMI,EAAe,SAACC,EAAOC,GACzBjC,EAAciC,EAClB,EACIC,EAAS,SAACC,GACV,IAAIC,EAAM3C,EAAMM,GAChB,GAAGqC,EAAK,CACJ,IAAIC,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOH,GACAC,GAEpB,OAAOG,EAAAA,EAAAA,KAACC,EAAAA,SAAmBF,EAAAA,EAAAA,GAAA,GAAKD,GACpC,CACA,OAAOE,EAAAA,EAAAA,KAAAE,EAAAA,SAAA,GACX,EACIC,EAAW,SAACP,GACZ,GAAiB,SAAdpC,EAAuB,CACtB,IAAIsC,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOH,GACA1C,EAAa,OAEjC,OAAO8C,EAAAA,EAAAA,KAACC,EAAAA,SAAmBF,EAAAA,EAAAA,GAAA,GAAKD,GACpC,CACI,OAAOM,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAG,SAAA,EAAED,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACC,MAAO/C,EAAYgD,SAAUhB,EAAaa,SAAA,EACvDL,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,MAAM,OAAOH,MAAM,UACxBP,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,MAAM,eAAKH,MAAM,aACtBP,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,MAAM,QAAQH,MAAM,cAE3BP,EAAAA,EAAAA,KAACL,EAAM,MAGf,EACA,OAAQK,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAAAN,UAACL,EAAAA,EAAAA,KAACG,EAAU,KAC5B,C","sources":["components/TabPanel.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { Tab, Tabs, Box } from '@mui/material';\nimport {DataContext} from \"../store/global_data.js\";\nimport RixDynamicComponent from \"../rix/RixDynamicComponent.js\";\nimport axios from 'axios';\n\nlet paths = {\n    'home': {\n        'rix_type': 'component',\n        path: 'components/Home.js',\n    },\n    'setting': {\n        'rix_type': 'component',\n        path: 'components/Setting.js',\n\n    },\n    'shell': {\n        'rix_type': 'component',\n        path: 'components/Shell.js',\n\n    },\n    'login': {\n        'rix_type': 'component',\n        path: 'components/Login.js',\n    }\n};\n\nfunction TabPanel() {\n    const [currentTab, setCurrentTab] = useState('login');\n    const [login, update_login] = useState({});\n    const global_data = useContext(DataContext);\n    let check_login = async ()=> {\n        const response = await axios.post('/api/userinfo');\n        let ret = response.data;\n        if(ret.ret == 0) {\n            global_data.set('user', {username: ret.data.username});\n        }\n    };\n    useEffect(()=> {\n        let w = (v)=> {\n            setCurrentTab('home');\n        };\n        global_data.watch('user', w);\n        check_login();\n        return ()=> {\n            global_data.unwatch('user', w);\n        };\n    },[]);\n    const handleChange = (event, newValue) => {\n        setCurrentTab(newValue);\n    };\n    let Render = (props)=> {\n        let one = paths[currentTab];\n        if(one) {\n            let new_props = {...props,\n                             ...one,\n                            };\n            return <RixDynamicComponent {...new_props}/>;\n        }\n        return <></>;\n    };\n    let Render_All=(props)=> {\n        if(currentTab == 'login') {\n            let new_props = {...props,\n                             ...paths['login'],\n                            };\n            return <RixDynamicComponent {...new_props}/>;\n        } else {\n            return <><Tabs value={currentTab} onChange={handleChange}>\n              <Tab label=\"Home\" value=\"home\"/>\n              <Tab label=\"配置\" value=\"setting\"/>\n              <Tab label=\"SHELL\" value=\"shell\"/>\n            </Tabs>\n            <Render/>\n                   </>;\n        }\n    };\n    return (<Box><Render_All/></Box>);\n}\n\nexport default TabPanel;\n"],"names":["paths","path","_useState","useState","_useState2","_slicedToArray","currentTab","setCurrentTab","_useState3","_useState4","global_data","useContext","DataContext","check_login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","ret","wrap","_context","prev","next","axios","sent","data","set","username","stop","apply","arguments","useEffect","w","v","watch","unwatch","handleChange","event","newValue","Render","props","one","new_props","_objectSpread","_jsx","RixDynamicComponent","_Fragment","Render_All","_jsxs","children","Tabs","value","onChange","Tab","label","Box"],"sourceRoot":""}