{"version":3,"file":"static/js/251.e79da24f.chunk.js","mappings":"4JAEMA,EAAQ,CACJC,WAAU,WAAI,OAADC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,EAAAA,QAAAA,YAAgB,CAC7B,GAAM,MACN,SAAY,wBACb,KAAD,EAHM,GAIO,IAJXL,EAAIE,EAAAI,MAIAC,IAAQ,CAAAL,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SACLR,EAAKS,MAAI,aAEVT,EAAK,KAAD,mBAAAE,EAAAQ,OAAA,GAAAX,EAAA,IARCH,EAUnB,EACMe,YAAW,SAACC,GAAU,OAADhB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAe,IAAA,IAAAN,EAAA,OAAAV,EAAAA,EAAAA,KAAAI,MAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAAAU,EAAAV,KAAA,EACPC,EAAAA,QAAAA,YAAgB,CAC5B,GAAM,MACN,SAAY,sBACZI,KAAMG,IACP,KAAD,EAJK,GAKO,IALVL,EAAGO,EAAAR,MAKAC,IAAQ,CAAAO,EAAAV,KAAA,eAAAU,EAAAN,OAAA,SACJD,EAAIE,MAAI,aAEbF,EAAI,KAAD,mBAAAO,EAAAJ,OAAA,GAAAG,EAAA,IATcjB,EAU3B,EACMmB,MAAK,WAAI,OAADnB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAkB,IAAA,IAAAC,EAAA,OAAApB,EAAAA,EAAAA,KAAAI,MAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAKT,OAHGa,EAAI,CACJE,QAAS,YACTC,KAAK,CAAC,QAAS,iBAClBF,EAAAd,KAAA,EACYC,EAAAA,QAAAA,YAAgBY,GAAG,KAAD,SAAAC,EAAAV,OAAA,SAAAU,EAAAZ,MAAA,wBAAAY,EAAAR,OAAA,GAAAM,EAAA,IANrBpB,EAOd,EACMc,KAAI,WAAI,OAADd,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAuB,IAAA,IAAAJ,EAAA,OAAApB,EAAAA,EAAAA,KAAAI,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,OAIR,OAHGa,EAAI,CACJE,QAAS,YACTC,KAAK,CAAC,OAAQ,iBACjBE,EAAAlB,KAAA,EACYC,EAAAA,QAAAA,YAAgBY,GAAG,KAAD,SAAAK,EAAAd,OAAA,SAAAc,EAAAhB,MAAA,wBAAAgB,EAAAZ,OAAA,GAAAW,EAAA,IALtBzB,EAMb,EACM2B,QAAO,WAAI,IAADC,EAAA,YAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAA2B,IAAA,OAAA5B,EAAAA,EAAAA,KAAAI,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACNoB,EAAKT,QAAQ,KAAD,SAAAW,EAAAtB,KAAA,EACZoB,EAAKd,OAAO,KAAD,mBAAAgB,EAAAhB,OAAA,GAAAe,EAAA,IAFL7B,EAGhB,GAIJ,W","sources":["utils/samba.js"],"sourcesContent":["import api from '../api';\n\nconst samba = {\n    async get_config() {\n        let conf = await api.config_file({\n            'op': 'get',\n            'filename': '/etc/samba/smb.conf'\n        });\n        if(conf.ret == 0) {\n            return conf.data;\n        } else {\n            throw conf;\n        }\n    },\n    async save_config(content) {\n        let ret = await api.config_file({\n            'op': 'put',\n            'filename': '/etc/samba/smb.conf',\n            data: content\n        });\n        if(ret.ret == 0) {\n            return ret.data;\n        }\n        throw ret;\n    },\n    async start() {\n        //ubuntu:systemctl start smbd.service\n        let p = {\n            command: \"systemctl\",\n            args:[\"start\", \"smbd.service\"]\n        };\n        return await api.run_command(p);\n    },\n    async stop() {\n        let p = {\n            command: \"systemctl\",\n            args:[\"stop\", \"smbd.service\"]\n        };\n        return await api.run_command(p);\n    },\n    async restart() {\n        await this.start();\n        await this.stop();\n    }\n};\n\n\nexport default samba;\n"],"names":["samba","get_config","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conf","wrap","_context","prev","next","api","sent","ret","abrupt","data","stop","save_config","content","_callee2","_context2","start","_callee3","p","_context3","command","args","_callee4","_context4","restart","_this","_callee5","_context5"],"sourceRoot":""}