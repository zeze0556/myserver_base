{"version":3,"file":"static/js/841.876d8e95.chunk.js","mappings":"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","sources":["components/BlockDevice.js","components/JsonEditorForm.js","components/Pools.js","../node_modules/@mui/material/Divider/Divider.js","../node_modules/@mui/icons-material/esm/ChevronLeft.js","components/StorageWindow.js","utils/bcachefs.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Home.js","../node_modules/@mui/icons-material/esm/Settings.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js"],"sourcesContent":["import React, { useState, useEffect, useRef,useContext } from 'react';\n//import api from '../api';\nimport { styled } from '@mui/system';\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n       } from '@mui/material';\n\nimport {useData} from \"../store/global_data.js\";\n\n\nfunction BlockDevice(props){\n    const [disks, update_disks] = useState([]);\n    const [data, update_data] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [poolstatus, set_poolstatus] = useState({online:false,\n                                                   status_text: \"离线\"\n                                                  });\n    const [filter, setFilter] = useState('');\n    const filteredData = disks.filter((row) => {\n        return Object.values(row).some((value) => {\n            return value.toString().toLowerCase().includes(filter.toLowerCase());\n        });\n    });\n    const {global_data, api} = useData();\n    //disks = data;\n    //merger_data(global_data.get('sysstat', []));\n    useEffect(()=> {\n        let blockdevices = global_data.get('blockdevices');\n        let sysdata_update = (v)=> {\n            let blockdevices = global_data.get('blockdevices');\n            //let v = global_data.get('sysstat', []);\n            //Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd\n            let label = data;\n            let old_data = disks;\n            let status = v;//v.hosts[0].statistics[0].disk;\n            label.forEach(one=>{\n                let d = status.filter(v=>{\n                    if(one.path == `/dev/${v.Device}`) return true;\n                    return false;\n                })[0];\n                if(!blockdevices) return;\n                let block = blockdevices.filter(v=>v.path === one.path)[0];\n                if(d&&block) {\n                    let index = old_data.findIndex(v=>v.path == one.path);\n                    if(index >= 0) {\n                        old_data.splice(index, 1, {\n                            ...block,\n                            id: one.path,\n                            ...d\n                        });\n                    } else {\n                        old_data.push({\n                            ...block,\n                            id: one.path,\n                            ...d\n                        });\n                    }\n                }\n            });\n            update_disks([...old_data]);\n        };\n        //sysdata_update([]);\n        global_data.watch('sysstat', sysdata_update);\n        update_disks(data);\n        return ()=> {\n            global_data.unwatch('sysstat', sysdata_update);\n        };\n    },[data]);\n    useEffect(()=> {\n        console.log(\"props===\", props);\n        if(props.data)\n        update_data(props.data);\n    },[props.data]);\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n    const handleEditClick = (parameter) => {\n    };\n    return <>\n         <TableContainer component={Paper}>\n           <Table>\n             <TableHead>\n               <TableRow>\n                 <TableCell>设备</TableCell>\n                 <TableCell>PATH</TableCell>\n                 <TableCell>标识</TableCell>\n                 <TableCell>容量</TableCell>\n                 <TableCell>读取</TableCell>\n                 <TableCell>写入</TableCell>\n               </TableRow>\n             </TableHead>\n             <TableBody>\n               {filteredData\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => (\n                    <TableRow key={row.path}>\n                      <TableCell>\n                        { props.onDown &&\n                        <Button onClick={() => props.onDown(row)}>下线</Button>\n                        }\n                        { props.onAdd&&props.check_add_status&&props.check_add_status(row) &&\n                          <Button onClick={() => props.onAdd(row)}>添加到池</Button>\n                        }\n                        { props.onRemove &&\n                        <Button onClick={() => props.onRemove(row)}>移除</Button>\n                        }\n                      </TableCell>\n                      <TableCell>{row.path}</TableCell>\n                      <TableCell>{row.model} {row.serial} {row.size}</TableCell>\n                      <TableCell>{row.size}</TableCell>\n                      <TableCell>{row[\"kB_read/s\"]}</TableCell>\n                      <TableCell>{row[\"kB_wrtn/s\"]}</TableCell>\n                    </TableRow>\n                ))}\n             </TableBody>\n           </Table>\n         </TableContainer>\n         <TablePagination\n           component=\"div\"\n           count={filteredData.length}\n           page={page}\n           onPageChange={handleChangePage}\n           rowsPerPage={rowsPerPage}\n           onRowsPerPageChange={handleChangeRowsPerPage}\n           style={{ marginTop: '1rem' }}\n         />\n       </>;\n};\n\nexport default BlockDevice;\n","import React, {useState, useEffect, useRef, useContext, forwardRef, useImperativeHandle, Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useData,rix_make_watch_data } from \"../store/global_data.js\";\nimport {Autocomplete, TextField} from '@mui/material';\n\nlet JSONEditor = window.JSONEditor;\n\n\nclass Disk_Select extends JSONEditor.AbstractEditor{\n    build() {\n        let value = this.value;\n        let self = this;\n        this.title = this.header = this.label = this.theme.getFormInputLabel(this.getTitle(), this.isRequired());\n        this.container.appendChild(this.title);\n        let disks = this.options.disks;\n        this.disks = disks;\n        const div = document.createElement('div');\n        this.container.append(div);\n        this.view_root = ReactDOM.createRoot(div);\n        this.rix_init_flag = false;\n        let onChange = (e, v)=> {\n            e.preventDefault();\n            this.setValue(v, false, false);\n        };\n        this.used_disks = rix_make_watch_data({used:[], cur_path:''});\n        if(this.parent.parent&&this.parent.parent.schema.uniqueItems) {\n            let cur_list = this.parent.parent;\n            this.jsoneditor.watch(cur_list.path, ()=> {\n                let v2 = cur_list.getValue();\n                let list = v2.map(v=>v.path);\n                this.used_disks.set('used', list);\n            });\n        }\n        this.set_model = (v)=> {\n            if (self.parent && self.parent.jsoneditor) {\n                let pr = self.parent.jsoneditor.getEditor(self.parent.path + '.model');\n                if (pr && self.disks) {\n                    let v2 = v;\n                    let model = self.disks.filter(v => v.path == v2)[0];\n                    if (model) {\n                        pr.setValue(model.model);\n                    }\n                }\n            }\n        };\n        this.used_disks.watch('cur_path', this.set_model);\n        const {global_data} = this.defaults;//useData();\n        let MyRender = ()=> {\n            const [options, setOptions] = useState([]);\n            const [value, setValue] = useState('');\n            if(!disks) disks = global_data.get('blockdevices');\n            this.disks = disks;\n            useEffect(() => {\n                let set_options = (v2)=> {\n                    let list_options = disks.map(v=>v.path);\n                    list_options = list_options.filter(v=> {\n                        return v2.filter(name=>name==v).length == 0;\n                    });\n                    setOptions(list_options);\n                };\n                this.used_disks.watch('used', set_options);\n                let set_v = (v2)=> {\n                    setValue(v2);\n                    this.set_model(v2);\n                };\n                set_options(this.used_disks.get('used'));\n                set_v(this.used_disks.get('cur_path'));\n                //this.used_disks.watch('cur_path', set_v);\n                return ()=> {\n                    this.used_disks.unwatch('used', set_options);\n                    //this.used_disks.unwatch('cur_path', set_v);\n                };\n            },[]);\n            return <Autocomplete\n                     freeSolo\n                     value={value}\n                     onChange={onChange}\n                     options={options}\n                     getOptionLabel={(option) => {\n                         let disk = disks.filter(v=>v.path == option)[0];\n                         if(disk) {\n                             let v = `${disk.model}(${disk.size}) at ${disk.path}`;\n                             return v;\n                         }\n                         return \"\";\n                     }}\n                     renderInput={(params) => {\n                                               return <TextField {...params} label=\"选择磁盘\" />;\n                                              }}\n                   />;\n        };\n        this.view_root.render(<MyRender/>);\n    }\n    setValue(v, init, fromTemplate) {\n        this.value = v;\n        this.refreshValue();\n        this.used_disks.set(\"cur_path\", v);\n        this.onChange(true);\n    }\n    getValue() {\n        return this.value;\n    }\n    destroy() {\n        this.used_disks.unwatch(this.set_model);\n        setTimeout(()=> {\n        this.view_root.unmount();\n        });\n    }\n}\nconst JsonEditorForm = forwardRef((props, ref) => {\n    const { schema, callbacks} = props;\n    const editorRef = useRef(null);\n    const containerRef = useRef(null);\n    const {global_data} = useData();\n    JSONEditor.defaults.editors.disk_select= Disk_Select;\n    JSONEditor.defaults.global_data = global_data;\n    //JSONEditor.defaults.options.keep_oneof_values = false;\n    JSONEditor.defaults.resolvers.unshift(function (schema) {\n        if (schema.type === 'string' && schema.format === 'disk_select') {\n            return 'disk_select';\n        }\n    });\n    //if(editorRef.current&&props.data) {\n    //    editorRef.current.setValue(props.data);\n    //}\n    useEffect(() => {\n        //if(editorRef.current) return;\n        let options = {\n            schema,\n            theme: 'bootstrap4',\n            //iconlib: 'fontawesome4',\n            ...props.options\n            //disable_collapse: true,\n            //disable_edit_json: true,\n            //disable_properties: true,\n            //no_additional_properties: true,\n            //required_by_default: true,\n        };\n        editorRef.current = new JSONEditor(containerRef.current, options);\n        editorRef.current.on('ready',() => {\n            // Now the api methods will be available\n            if(props.data)\n            editorRef.current.setValue(props.data);\n        });\n        return () => {\n            if (editorRef.current) {\n                editorRef.current.destroy();\n            }\n        };\n    }, [schema,props]);\n\n    const getValue = () => {\n        return editorRef.current.getValue();\n    };\n\n    useImperativeHandle(ref, () => ({\n        getValue,\n    }));\n\n    return (\n        <div ref={containerRef} {...props}/>\n    );\n});\nexport default JsonEditorForm;\n","import React, { useState, useEffect, useRef,useContext } from 'react';\nimport { styled } from '@mui/system';\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n       } from '@mui/material';\nimport bcachefs from '../utils/bcachefs.js';\nimport {useData} from \"../store/global_data.js\";\nimport BlockDevice from \"./BlockDevice\";\n\nfunction Pool(props) {\n    \n    let pool = props.data;\n    console.log(\"pool=\", pool);\n    const {global_data,api} = useData();\n    const [labels, update_labels] = useState([]);\n    useEffect(()=> {\n        update_labels(props.data.label);\n    },[props.data]);\n\n    let onDown = (row)=> {\n        console.log(\"down==\", row);\n    };\n    let onRemove = async (row)=> {\n        let ret = await api.run_command(bcachefs.device.evacuate({\n            device: row.path,\n            mount_path: pool.mount_path,\n        }));\n        if(ret.ret == 0) {\n            let remove_ret = await api.run_command(bcachefs.device.remove({\n                device: row.path,\n                mount_path: pool.mount_path,\n            }));\n            if(remove_ret.ret == 0) {\n                let index = pool.label.findIndex(v=>v.path == row.path);\n                if(index>=0) {\n                    pool.label.splice(index, 1);\n                }\n                let pools = global_data.get('pools');\n                index = pools.findIndex(v=>v.name === pool.name);\n                if(index>=0) {\n                    pools.splice(index,1,pool);\n                }\n                let write_ret = await api.config_file({filename:'config/pools.config', 'op':\"put\", data: JSON.stringify(pools)});\n                if(write_ret.ret == 0) {\n                    update_labels(pool.label);\n                    global_data.set('pools', pools);\n                }\n            }\n        }\n    };\n\n\n\n    let Status = ()=> {\n        const [poolstatus, set_poolstatus] = useState({online:false,\n                                                       status_text: \"离线\"\n                                                      });\n        let mount_status = async ()=> {\n            let mount_path = pool.mount_path;\n            let ret = await api.run_command(bcachefs.fs.usage(mount_path));\n            if(ret.ret == 0) {\n                let stdout = ret.data.stdout.split(`\\n`);\n                set_poolstatus({online: true,\n                                status_text: \"在线\"\n                               });\n            } else {\n                set_poolstatus({online: false,\n                                status_text: \"离线\"\n                               });\n            }\n        };\n        let mount = async (e)=> {\n            e.preventDefault();\n            let ret = await api.run_command(bcachefs.mount(pool));\n            await mount_status();\n\n        };\n\n        let umount = async (e)=> {\n            e.preventDefault();\n            let ret = await api.run_command(bcachefs.umount(pool));\n            await mount_status();\n        };\n        useEffect(()=> {\n            //setParameters(pool.label);\n            let timer = setInterval(()=> {\n                mount_status();\n            }, 60*1000);\n            mount_status();\n            return ()=> {\n                //global_data.unwatch('sysstate', sysdata_update);\n                clearInterval(timer);\n            };\n        },[]);\n        return <div>名称:{pool.name} 挂载位置: {pool.mount_path} 状态:\n                 {poolstatus.online &&\n                  <Button onClick={umount}>卸载</Button>\n                 }\n                 {!poolstatus.online &&\n                  <Button onClick={mount}>挂载</Button>\n                 }</div>;\n    };\n\n    return <div>\n             <Status/>\n             <BlockDevice data={labels} onDown={onDown} onRemove={onRemove}/>;\n        </div>;\n};\n\nexport default Pool;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  '&::before, &::after': {\n    position: 'relative',\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    top: '50%',\n    content: '\"\"',\n    transform: 'translateY(50%)'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    top: '0%',\n    left: '50%',\n    borderTop: 0,\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    transform: 'translateX(0%)'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'ChevronLeft');","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport {\n     Box, Typography, Button,\n    Drawer,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    AppBar as MuiAppBar,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Toolbar,\n    IconButton,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport {\n    Settings,\n    Close, Restore,\n    Menu,\n    Home,\n    ChevronLeft,\n    Maximize, Minimize\n} from '@mui/icons-material';\nimport { useData } from \"../store/global_data.js\";\n//import api from '../api';\nimport BlockDevice from \"./BlockDevice\";\nimport Pool from './Pools';\nimport JsonEditorForm from './JsonEditorForm';\nimport bcachefs from '../utils/bcachefs';\nconst drawerWidth = 240;\nconst CustomDialogContent = styled(DialogContent)({\n    width: '80%',\n});\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => {\n        let ret = {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: `-${drawerWidth}px`,\n        ...(open && {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        }),\n        };\n        return ret;\n    },\n);\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: `${drawerWidth}px`,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n}));\n\n\nconst StorageWindow = (props) => {\n    const {global_data, api} = useData();\n    const [state, setState] = useState({\n        disks:[],\n        pools:[],\n        drawOpen: false,\n        all_disk: true,\n        show_pools: false,\n        openAddDialog: false,\n        schema:{},\n        data: { id: 0, key: '', status: 0, type: 0, value: '', parent_id: 0 }\n    });\n    const { onActive, onClose, onRestore, onMaximize, onMinimize } = props;\n    let update_state = (v)=> {\n        setState((prev) => {\n            return { ...prev, ...v };\n        });\n    };\n    useEffect(() => {\n        let my_set_pool = (v) => {\n            update_state({pools:v});\n        };\n        let my_set = (v) => {\n            update_state({disks:v});\n        };\n        let v = global_data.get('pools', [], async () => {\n            let read_ret = await api.config_file({ filename: 'config/pools.config', 'op': \"get\" });\n            if (read_ret.ret == 0) {\n                let pools = JSON.parse(read_ret.data);\n                global_data.set('pools', pools);\n            }\n        });\n        update_state({pools:v});\n        api.disk_info({});\n        global_data.watch('blockdevices', my_set);\n        global_data.watch('pools', my_set_pool);\n        return () => {\n            global_data.unwatch('blockdevices', my_set);\n            global_data.unwatch('pools', my_set_pool);\n        };\n    },[]);\n    let onAdd = (row) => {\n        let pool_names = state.pools.map(v => { return v.name; });\n        update_state({\n                openAddDialog: true,\n                schema: {\n                    \"$ref\": \"#/definitions/config\",\n                    \"definitions\": {\n                        \"config\": {\n                            \"type\": \"object\",\n                            \"title\": \"加入到池\",\n                            \"properties\": {\n                                \"op\": {\n                                    \"type\": \"string\",\n                                    \"default\": \"add_device_to_pool\",\n                                    \"options\": {\n                                        \"hidden\": true\n                                    }\n                                },\n                                \"device\": {\n                                    \"type\": \"string\",\n                                    \"default\": row.path,\n                                    \"options\": {\n                                        \"hidden\": true\n                                    }\n                                },\n                                \"pool\": {\n                                    \"type\": \"string\",\n                                    \"title\": \"池名字\",\n                                    \"enum\": pool_names,\n                                    \"options\": {\n                                        \"enum_titles\": pool_names\n                                    }\n                                },\n                                \"label\": {\n                                    \"type\": \"string\",\n                                    \"title\": \"标签\",\n                                    \"default\": \"\"\n                                },\n                                \"fs_size\": {\n                                    \"type\": \"string\",\n                                    \"title\": \"fs_size\",\n                                    \"default\": \"\"\n                                },\n                                \"discard\": {\n                                    \"type\": \"boolean\",\n                                    \"title\": \"discard\",\n                                    \"default\": false\n                                },\n                                \"bucket\": {\n                                    \"type\": \"string\",\n                                    \"title\": \"bucket\",\n                                    \"default\": \"\"\n                                }\n                            },\n                            \"required\": [\n                                \"op\",\n                                \"device\",\n                                \"pool\",\n                                \"label\",\n                                \"fs_size\",\n                                \"discard\",\n                                \"bucket\",\n                            ]\n                        }\n                    }\n                }\n            });\n    };\n    let check_add_status = (row) => {\n        for (let pool of state.pools) {\n            let index = pool.label.findIndex(v => v.path == row.path);\n            if (index >= 0) return false;\n        }\n        return true;\n    };\n    let Rend_Pool = () => {\n        let ret = [];\n        for (let v of state.pools) {\n            ret.push(<Pool data={v} key={v} />);\n        }\n        return ret;\n    };\n    const jsonEditorFormRef = useRef(null);\n    let onSave = async () => {\n        try {\n            const config = jsonEditorFormRef.current.getValue();\n            let pools = state.pools;\n            switch (config.op) {\n                case 'add_device_to_pool': {\n                    console.log(\"add device to pool\", config);\n                    let pool_index = pools.findIndex(v => v.name == config.pool);\n                    let pool = null;\n                    if (pool_index >= 0)\n                        pool = pools[pool_index];\n                    let add_ret = await api.run_command({\n                        ...bcachefs.device.add({\n                            ...config,\n                            mount_path: pool.mount_path\n                        }),\n                    });\n                    if (add_ret.ret == 0) {\n                        let index = pool.label.findIndex(v => v.path == config.device);\n                        if (index >= 0) {\n                            pool.label.splice(index, 1, { ...pool.label[index], name: config.label, path: config.device });\n                        } else {\n                            pool.label.push({ name: config.label, path: config.device });\n                        }\n                        let write_ret = await api.config_file({ filename: 'config/pools.config', 'op': \"put\", data: JSON.stringify(pools) });\n                        if (write_ret.ret == 0) {\n                            global_data.set('pools', pools);\n                            update_state({openAddDialog:false});\n                        }\n                    }\n                }\n                    break;\n                case 'addpool': {\n                    let format_ret = await api.run_command({\n                        ...bcachefs.format(config),\n                        config\n                    });\n                    console.log(\"format_ret===\", format_ret);\n                    if (format_ret.ret == 0) {\n                        let name = config.name;\n                        let cur_pools = pools;\n                        let index = cur_pools.findIndex(v => v.name == name);\n                        if (index >= 0) {\n                            cur_pools.split(index, 1, config);\n                        } else {\n                            cur_pools.push(config);\n                        }\n                        global_data.set('pools', cur_pools);\n                        let write_config_ret = await api.config_file({ op: 'put', filename: 'config/pools.config', data: JSON.stringify(cur_pools) });\n                        if (write_config_ret.ret == 0) {\n                            console.log(\"write_config ok=\", write_config_ret);\n                        }\n                        if (config.auto_mount == true) {\n                            let mount_ret = await api.run_command({\n                                ...bcachefs.mount(config),\n                                config,\n                            });\n                            console.log(\"mount_ret===\", mount_ret);\n                        }\n                        update_state({ openAddDialog: false });\n                    }\n                }\n                    break;\n            }\n        } catch (error) {\n            console.error('Error saving parameter:', error);\n        }\n    };\n\n    const RenderAddDialog = () => {\n        let onClose = ()=> {\n             update_state({openAddDialog: !state.openAddDialog });\n        };\n        return (\n            <Dialog open={state.openAddDialog} onClose={onClose} fullWidth maxWidth=\"md\">\n                <DialogTitle>添加参数</DialogTitle>\n                <CustomDialogContent>\n                    <JsonEditorForm schema={state.schema} ref={jsonEditorFormRef}  />\n                </CustomDialogContent>\n                <DialogActions>\n                    <Button onClick={onSave}>保存</Button>\n                    <Button onClick={onClose}>取消</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n    const add_pool = (e) => {\n        e.preventDefault();\n        update_state({\n            openAddDialog: true,\n            schema: {\n                \"$ref\": \"#/definitions/bcachefs_config\",\n                \"definitions\": {\n                    \"bcachefs_label\": {\n                        \"type\": \"array\",\n                        \"title\": \"标签配置\",\n                        \"uniqueItems\": true,\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"headerTemplate\": \"\\{\\{self.name\\}\\}=\\{\\{self.path\\}\\}\",\n                            \"properties\": {\n                                \"name\": {\n                                    \"type\": \"string\",\n                                    \"default\": \"\",\n                                    \"title\": \"label_name\",\n                                },\n                                \"path\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"disk_select\",\n                                    \"title\": \"设备\"\n                                },\n                                \"model\": {\n                                    \"type\": \"string\",\n                                    \"title\": \"硬盘\",\n                                    \"options\": {\n                                        \"hidden\": true\n                                    }\n                                }\n                            },\n                            \"required\": [\"name\", \"path\", \"model\"]\n                        }\n                    },\n                    \"bcachefs_config\": {\n                        type: \"object\",\n                        properties: {\n                            \"op\": {\n                                \"type\": \"string\",\n                                \"default\": \"addpool\",\n                                \"options\": {\n                                    \"hidden\": true\n                                }\n                            },\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"title\": \"名称\",\n                                \"default\": \"pool\"\n                            },\n                            compression: {\n                                \"type\": \"string\",\n                                \"title\": \"压缩方式\",\n                                \"enum\": [\"none\", \"lz4\", \"gzip\", \"zstd\"],\n                                \"default\": \"none\",\n                                \"options\": {\n                                    \"enum_titles\": [\n                                        \"none\",\n                                        \"lz4\",\n                                        \"gzip\",\n                                        \"zstd\"\n                                    ]\n                                }\n                            },\n                            \"encrypted\": {\n                                \"type\": \"boolean\",\n                                \"title\": \"加密\",\n                                \"default\": false\n                            },\n                            \"replicas\": {\n                                \"type\": \"integer\",\n                                \"title\": \"数据副本数量\",\n                                \"default\": 1\n                            },\n                            \"foreground_target\": {\n                                \"type\": \"string\",\n                                \"title\": \"前端设备标签\",\n                                \"default\": \"\"\n                            },\n                            \"promote_target\": {\n                                \"type\": \"string\",\n                                \"title\": \"promote_target设备标签\",\n                                \"default\": \"\"\n                            },\n                            \"background_target\": {\n                                \"type\": \"string\",\n                                \"title\": \"后端设备标签\",\n                                \"default\": \"\"\n                            },\n                            \"label\": {\n                                \"title\": \"存储标签设置\",\n                                \"$ref\": \"#/definitions/bcachefs_label\"\n                            },\n                            \"auto_mount\": {\n                                \"type\": \"boolean\",\n                                \"title\": \"自动挂载\",\n                                \"default\": false\n                            },\n                            \"mount_path\": {\n                                \"type\": \"string\",\n                                \"title\": \"挂载路径\",\n                                \"default\": \"/mnt\"\n                            }\n                        },\n                        required: [\n                            //\"possible_colors\", \"primary_color\",\n                            \"op\",\n                            \"name\",\n                            \"compression\", \"encrypted\", \"replicas\", \"foreground_target\", \"promote_target\", \"background_target\", \"label\", \"auto_mount\", \"mount_path\"]\n                    }\n                }\n            }\n        });\n    };\n\n    return <><AppBar open={state.drawOpen} sx={{position:'relative'}}>\n        <Toolbar\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '8px',\n            }}\n        >\n            <IconButton edge=\"start\" color=\"inherit\" onClick={() => { update_state({drawOpen: !state.drawOpen }); }} sx={{ mr: 2, ...(state.drawOpen&& { display: 'none' }) }}>\n            <Menu />\n        </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{\n                flexGrow: 1,\n                cursor: 'move',\n            }}\n                className=\"window-title\"\n                onClick={onActive}\n            >\n                存储设置\n            </Typography>\n            <IconButton color=\"inherit\" onClick={onMinimize}>\n                <Minimize />\n            </IconButton>\n            {props.isMaximized ? (\n                <IconButton color=\"inherit\" onClick={onRestore}>\n                    <Restore />\n                </IconButton>\n            ) : (\n                <IconButton color=\"inherit\" onClick={onMaximize}>\n                    <Maximize />\n                </IconButton>\n            )}\n            <IconButton color=\"inherit\" onClick={onClose}>\n                <Close />\n            </IconButton>\n        </Toolbar>\n    </AppBar>\n\n        <Box p={2}\n             sx={{display:'flex'}}\n        >\n          <Drawer anchor=\"left\" open={state.drawOpen} onClose={()=>{}}\n                  sx={{ width:drawerWidth,\n                      flexShrink: 0,\n                      '& .MuiDrawer-paper': {\n                          width: drawerWidth,\n                          boxSizing: 'border-box',\n                      },\n                      }}\n            variant=\"persistent\"\n          >\n                <DrawerHeader>\n                    <IconButton onClick={() => { update_state({drawOpen: !state.drawOpen }); }}>\n                        <ChevronLeft/>\n                    </IconButton>\n                </DrawerHeader>\n\n                <Divider />\n                <List>\n                    <ListItem button onClick={() => { update_state({ all_disk: true, show_pools: false}); }}>\n                        <ListItemIcon>\n                            <Home/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"所有磁盘\" />\n                    </ListItem>\n                  <ListItem button onClick={()=>{update_state({ all_disk:false,show_pools: true});}}>\n                        <ListItemIcon>\n                            <Settings/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"存储池\" />\n                    </ListItem>\n                  <ListItem button onClick={add_pool}>\n                        <ListItemIcon>\n                            <Settings />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加池\" />\n                    </ListItem>\n\n                </List>\n    </Drawer>\n          <Main open={state.drawOpen}>\n            {state.show_pools &&\n             <Rend_Pool/>\n            }\n            {state.all_disk &&\n            <BlockDevice data={state.disks} onAdd={onAdd} check_add_status={check_add_status}/>\n            }\n            {state.openAddDialog &&\n            <RenderAddDialog/>\n            }\n\n          </Main>\n        </Box>\n    </>;\n};\n\nexport default StorageWindow;\n","const bcachefs = {\n    command: \"bcachefs\",\n\n    fs: {\n        usage(path) {\n            let args = [];\n            args.push(\"fs\");\n            args.push(\"usage\");\n            args.push(path);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        }\n    },\n    device: {\n        remove(config) {\n            let args = [];\n            args.push('device');\n            args.push('remove');\n            args.push(config.device);\n            args.push(config.mount_path);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        add(config) {\n            let args = [];\n            args.push('device');\n            args.push('add');\n            config.label && config.label != '' && args.push(`--label=${config.label}`);\n            config.fs_size && config.fs_size != '' && args.push(`--fs_size=${config.fs_size}`);\n            config.discard && config.discard == true && args.push(`--discard`);\n            config.bucket && config.bucket != '' && args.push(`--bucket=${config.bucket}`);\n            args.push(config.mount_path);\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        online(config) {\n            let args = [];\n            args.push('device');\n            args.push('online');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        offline(config) {\n            let args = [];\n            args.push('device');\n            args.push('offline');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        },\n        evacuate(config) {\n            let args = [];\n            args.push('device');\n            args.push('evacuate');\n            args.push(config.device);\n            return {\n                command: \"bcachefs\",\n                args\n            };\n        }\n    },\n    format(config) {\n        let args = [];\n        args.push(\"format\");\n        args.push(`--compression=${config['compression']}`);\n        if(config[\"encrypted\"]) args.push(\"--encrypted\");\n        args.push(`--foreground_target=${config['foreground_target']}`);\n        args.push(`--promote_target=${config['promote_target']}`);\n        args.push(`--background_target=${config['background_target']}`);\n        args.push(`--replicas=${config['replicas']}`);\n        for(let disk of config['label']) {\n            args.push(`--label=${disk.name}`);\n            args.push(`${disk.path}`);\n        }\n        return {\n            command: this.command,\n            args\n        };\n    },\n    list(config) {\n        let args = [];\n        args.push(\"list\");\n        args.push(config['path']);\n        return {\n            command: this.command,\n            args\n        };\n    },\n    list_journal(config) {\n        let args = [];\n        args.push(\"list_journal\");\n        args.push(config['path']);\n        return {\n            command: this.command,\n            args\n        };\n    },\n    mount(config) {\n        let args = [];\n        args.push(\"-t\");\n        args.push(\"bcachefs\");\n        args.push(config['label'].map(v=>v.path).join(':'));\n        args.push(config.mount_path);\n        return {\n            command: \"mount\",\n            args\n        };\n    },\n    umount(config) {\n        let args = [];\n        args.push(config.mount_path);\n        return {\n            command: \"umount\",\n            args\n        };\n\n    }\n};\n\nexport default bcachefs;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z\"\n}), 'Settings');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;"],"names":["props","_useState","useState","_useState2","_slicedToArray","disks","update_disks","_useState3","_useState4","data","update_data","_useState5","_useState6","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","online","status_text","_useState12","_useState13","_useState14","filter","filteredData","row","Object","values","some","value","toString","toLowerCase","includes","_useData","useData","global_data","api","useEffect","get","sysdata_update","v","blockdevices","old_data","status","forEach","one","d","path","concat","Device","block","index","findIndex","splice","_objectSpread","id","push","_toConsumableArray","watch","unwatch","console","log","_jsxs","_Fragment","children","_jsx","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","map","onDown","Button","onClick","onAdd","check_add_status","onRemove","model","serial","size","TablePagination","count","length","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","style","marginTop","JSONEditor","window","Disk_Select","_JSONEditor$AbstractE","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","_this","self","this","title","header","label","theme","getFormInputLabel","getTitle","isRequired","container","appendChild","options","div","document","createElement","append","view_root","ReactDOM","rix_init_flag","onChange","e","preventDefault","setValue","used_disks","rix_make_watch_data","used","cur_path","parent","schema","uniqueItems","cur_list","jsoneditor","list","getValue","set","set_model","pr","getEditor","v2","defaults","MyRender","setOptions","set_options","list_options","name","Autocomplete","freeSolo","getOptionLabel","option","disk","renderInput","params","TextField","render","init","fromTemplate","refreshValue","_this2","setTimeout","unmount","AbstractEditor","JsonEditorForm","forwardRef","ref","editorRef","callbacks","useRef","containerRef","editors","disk_select","resolvers","unshift","type","format","current","on","destroy","useImperativeHandle","pool","labels","update_labels","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pools","wrap","_context","prev","next","run_command","bcachefs","device","mount_path","sent","ret","config_file","filename","JSON","stringify","stop","_x","Status","poolstatus","set_poolstatus","mount_status","_ref2","_callee2","_context2","stdout","split","mount","_ref3","_callee3","_context3","_x2","umount","_ref4","_callee4","_context4","_x3","timer","setInterval","clearInterval","BlockDevice","_excluded","DividerRoot","styled","slot","overridesResolver","styles","ownerState","root","absolute","variant","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlign","textAlignRight","textAlignLeft","_extends","margin","flexShrink","borderWidth","borderStyle","borderColor","vars","palette","divider","borderBottomWidth","position","bottom","left","width","dividerChannel","alpha","marginLeft","spacing","marginRight","marginBottom","height","borderRightWidth","alignSelf","display","whiteSpace","border","borderTop","top","content","transform","flexDirection","borderLeft","DividerWrapper","wrapper","wrapperVertical","_ref5","paddingLeft","paddingRight","paddingTop","paddingBottom","React","inProps","useThemeProps","_props$absolute","className","_props$component","_props$flexItem","_props$light","_props$orientation","_props$role","role","undefined","_props$textAlign","_props$variant","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","getDividerUtilityClass","useUtilityClasses","as","clsx","createSvgIcon","drawerWidth","CustomDialogContent","DialogContent","Main","shouldForwardProp","prop","open","flexGrow","padding","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","AppBar","MuiAppBar","DrawerHeader","alignItems","mixins","toolbar","justifyContent","drawOpen","all_disk","show_pools","openAddDialog","parent_id","state","setState","onActive","onClose","onRestore","onMaximize","onMinimize","update_state","my_set_pool","my_set","read_ret","parse","disk_info","Rend_Pool","_step2","_iterator2","_createForOfIteratorHelper","s","n","done","Pool","err","f","jsonEditorFormRef","onSave","config","pool_index","format_ret","cur_pools","_index","write_config_ret","mount_ret","t0","op","abrupt","auto_mount","t1","error","RenderAddDialog","Dialog","fullWidth","maxWidth","DialogTitle","DialogActions","sx","Toolbar","IconButton","edge","color","mr","Menu","Typography","cursor","Minimize","isMaximized","Restore","Maximize","Close","Box","p","Drawer","anchor","boxSizing","ChevronLeft","Divider","List","ListItem","button","ListItemIcon","Home","ListItemText","primary","Settings","properties","compression","required","pool_names","_step","_iterator","command","fs","usage","args","remove","add","fs_size","discard","bucket","offline","evacuate","list_journal","join","ListItemIconRoot","alignItemsFlexStart","minWidth","action","active","context","ListContext","getListItemIconUtilityClass"],"sourceRoot":""}