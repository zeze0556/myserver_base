{"version":3,"file":"static/js/605.5a1a130b.chunk.js","mappings":"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","sources":["components/CommonWindow.js","components/JsonEditorForm.js","components/samba.js","utils/samba.js","../node_modules/@mui/icons-material/esm/Close.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext, forwardRef } from 'react';\nimport { styled } from '@mui/system';\n\nimport {\n    Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableBody,\n    Paper,\n    TablePagination,\n    Container,\n    Box,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Modal\n} from '@mui/material';\nimport {\n    DesktopWindows, Settings, Notifications,\n    Close, Restore,\n    Menu,\n    Home,\n    ChevronLeft,\n    Maximize, Minimize\n} from '@mui/icons-material';\n\nimport { useData } from \"../store/global_data.js\";\n\n\nconst CommonWindow = forwardRef((props, ref) => {\n    const { onActive, onClose, onRestore, onMaximize, onMinimize } = props;\n    return <><AppBar sx={{ position: 'relative' }}>\n        <Toolbar\n            sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '8px',\n            }}\n        >\n            <Typography variant=\"h6\" component=\"div\" sx={{\n                flexGrow: 1,\n                cursor: 'move',\n            }}\n                className=\"window-title\"\n                onClick={onActive}\n            >\n              {props.title}\n            </Typography>\n            <IconButton color=\"inherit\" onClick={onMinimize}>\n                <Minimize />\n            </IconButton>\n            {props.isMaximized ? (\n                <IconButton color=\"inherit\" onClick={onRestore}>\n                    <Restore />\n                </IconButton>\n            ) : (\n                <IconButton color=\"inherit\" onClick={onMaximize}>\n                    <Maximize />\n                </IconButton>\n            )}\n            <IconButton color=\"inherit\" onClick={onClose}>\n                <Close />\n            </IconButton>\n        </Toolbar>\n    </AppBar>\n        {props.children}\n    </>;\n\n});\n\nexport default CommonWindow;\n","import React, {useState, useEffect, useRef, useContext, forwardRef, useImperativeHandle, Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useData,rix_make_watch_data } from \"../store/global_data.js\";\nimport {Autocomplete, TextField} from '@mui/material';\n\nlet JSONEditor = window.JSONEditor;\n\n\nclass Disk_Select extends JSONEditor.AbstractEditor{\n    build() {\n        let value = this.value;\n        let self = this;\n        this.title = this.header = this.label = this.theme.getFormInputLabel(this.getTitle(), this.isRequired());\n        this.container.appendChild(this.title);\n        let disks = this.options.disks;\n        this.disks = disks;\n        const div = document.createElement('div');\n        this.container.append(div);\n        this.view_root = ReactDOM.createRoot(div);\n        this.rix_init_flag = false;\n        let onChange = (e, v)=> {\n            e.preventDefault();\n            this.setValue(v, false, false);\n        };\n        this.used_disks = rix_make_watch_data({used:[], cur_path:''});\n        if(this.parent.parent&&this.parent.parent.schema.uniqueItems) {\n            let cur_list = this.parent.parent;\n            this.jsoneditor.watch(cur_list.path, ()=> {\n                let v2 = cur_list.getValue();\n                let list = v2.map(v=>v.path);\n                this.used_disks.set('used', list);\n            });\n        }\n        this.set_model = (v)=> {\n            if (self.parent && self.parent.jsoneditor) {\n                let pr = self.parent.jsoneditor.getEditor(self.parent.path + '.model');\n                if (pr && self.disks) {\n                    let v2 = v;\n                    let model = self.disks.filter(v => v.path == v2)[0];\n                    if (model) {\n                        pr.setValue(model.model);\n                    }\n                }\n            }\n        };\n        this.used_disks.watch('cur_path', this.set_model);\n        const {global_data} = this.defaults;//useData();\n        let MyRender = ()=> {\n            const [options, setOptions] = useState([]);\n            const [value, setValue] = useState('');\n            if(!disks) disks = global_data.get('blockdevices');\n            this.disks = disks;\n            useEffect(() => {\n                let set_options = (v2)=> {\n                    let list_options = disks.map(v=>v.path);\n                    list_options = list_options.filter(v=> {\n                        return v2.filter(name=>name==v).length == 0;\n                    });\n                    setOptions(list_options);\n                };\n                this.used_disks.watch('used', set_options);\n                let set_v = (v2)=> {\n                    setValue(v2);\n                    this.set_model(v2);\n                };\n                set_options(this.used_disks.get('used'));\n                set_v(this.used_disks.get('cur_path'));\n                //this.used_disks.watch('cur_path', set_v);\n                return ()=> {\n                    this.used_disks.unwatch('used', set_options);\n                    //this.used_disks.unwatch('cur_path', set_v);\n                };\n            },[]);\n            return <Autocomplete\n                     freeSolo\n                     value={value}\n                     onChange={onChange}\n                     options={options}\n                     getOptionLabel={(option) => {\n                         let disk = disks.filter(v=>v.path == option)[0];\n                         if(disk) {\n                             let v = `${disk.model}(${disk.size}) at ${disk.path}`;\n                             return v;\n                         }\n                         return \"\";\n                     }}\n                     renderInput={(params) => {\n                                               return <TextField {...params} label=\"选择磁盘\" />;\n                                              }}\n                   />;\n        };\n        this.view_root.render(<MyRender/>);\n    }\n    setValue(v, init, fromTemplate) {\n        this.value = v;\n        this.refreshValue();\n        this.used_disks.set(\"cur_path\", v);\n        this.onChange(true);\n    }\n    getValue() {\n        return this.value;\n    }\n    destroy() {\n        this.used_disks.unwatch(this.set_model);\n        setTimeout(()=> {\n        this.view_root.unmount();\n        });\n    }\n}\nconst JsonEditorForm = forwardRef((props, ref) => {\n    const { schema, callbacks} = props;\n    const editorRef = useRef(null);\n    const containerRef = useRef(null);\n    const {global_data} = useData();\n    JSONEditor.defaults.editors.disk_select= Disk_Select;\n    JSONEditor.defaults.global_data = global_data;\n    //JSONEditor.defaults.options.keep_oneof_values = false;\n    JSONEditor.defaults.resolvers.unshift(function (schema) {\n        if (schema.type === 'string' && schema.format === 'disk_select') {\n            return 'disk_select';\n        }\n    });\n    //if(editorRef.current&&props.data) {\n    //    editorRef.current.setValue(props.data);\n    //}\n    useEffect(() => {\n        //if(editorRef.current) return;\n        let options = {\n            schema,\n            theme: 'bootstrap4',\n            //iconlib: 'fontawesome4',\n            ...props.options\n            //disable_collapse: true,\n            //disable_edit_json: true,\n            //disable_properties: true,\n            //no_additional_properties: true,\n            //required_by_default: true,\n        };\n        editorRef.current = new JSONEditor(containerRef.current, options);\n        editorRef.current.on('ready',() => {\n            // Now the api methods will be available\n            if(props.data)\n            editorRef.current.setValue(props.data);\n        });\n        return () => {\n            if (editorRef.current) {\n                editorRef.current.destroy();\n            }\n        };\n    }, [schema,props]);\n\n    const getValue = () => {\n        return editorRef.current.getValue();\n    };\n\n    useImperativeHandle(ref, () => ({\n        getValue,\n    }));\n\n    return (\n        <div ref={containerRef} {...props}/>\n    );\n});\nexport default JsonEditorForm;\n","import React, { useState, useEffect, useRef,useContext } from 'react';\nimport samba from '../utils/samba';\nimport JsonEditorForm from './JsonEditorForm';\nimport { useData } from \"../store/global_data.js\";\n\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n         Container,\n         Box,\n         Modal\n       } from '@mui/material';\nimport CommonWindow from './CommonWindow';\n\nexport default function SambaSetting(props) {\n    const { global_data, api } = useData();\n    let [content,update_content] = useState(\"\");\n    const [schema, setSchema] = useState({\n        \"type\": \"string\",\n        \"format\": \"textarea\",\n        \"title\": \"samba配置\",\n        \"default\": \"\",\n        \"options\": {\n            \"input_height\": \"500px\",\n            //\"style\": {height:\"100vh\"}\n        }\n    });\n    const jsonEditorFormRef = useRef(null);\n    let init = async()=> {\n        let conf = await samba.get_config();\n        update_content(conf);\n    };\n    useEffect(()=> {\n        init();\n    },[]);\n\n    let update_config = async()=> {\n        try {\n            let config = jsonEditorFormRef.current.getValue();\n            let conf = await samba.save_config(config);\n            update_content(conf);\n        } catch (e) {\n            console.log(\"update samba error\", e);\n        }\n    };\n\n    let restart = async()=> {\n        await samba.restat();\n    };\n    return <><CommonWindow title=\"共享服务器\" {...props}>\n    <Container style={{width:\"100vh\",\n                              height:\"100%\",\n                             }}>\n        <JsonEditorForm schema={schema}\n                        data={content}\n                        ref={jsonEditorFormRef} \n                        style={{width:\"100vh\",\n                                height:\"100%\",\n                               }} />\n             <Button onClick={update_config}>更新</Button>\n             <Button onClick={restart}>重启</Button>\n           </Container>\n    </CommonWindow>\n    </>\n    ;\n}\n","import api from '../api';\n\nconst samba = {\n    async get_config() {\n        let conf = await api.config_file({\n            'op': 'get',\n            'filename': '/etc/samba/smb.conf'\n        });\n        if(conf.ret == 0) {\n            return conf.data;\n        } else {\n            throw conf;\n        }\n    },\n    async save_config(content) {\n        let ret = await api.config_file({\n            'op': 'put',\n            'filename': '/etc/samba/smb.conf',\n            data: content\n        });\n        if(ret.ret == 0) {\n            return ret.data;\n        }\n        throw ret;\n    },\n    async start() {\n        //ubuntu:systemctl start smbd.service\n        let p = {\n            command: \"systemctl\",\n            args:[\"start\", \"smbd.service\"]\n        };\n        return await api.run_command(p);\n    },\n    async stop() {\n        let p = {\n            command: \"systemctl\",\n            args:[\"stop\", \"smbd.service\"]\n        };\n        return await api.run_command(p);\n    },\n    async restart() {\n        await this.start();\n        await this.stop();\n    }\n};\n\n\nexport default samba;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["CommonWindow","forwardRef","props","ref","onActive","onClose","onRestore","onMaximize","onMinimize","_jsxs","_Fragment","children","_jsx","AppBar","sx","position","Toolbar","display","alignItems","justifyContent","marginBottom","Typography","variant","component","flexGrow","cursor","className","onClick","title","IconButton","color","Minimize","isMaximized","Restore","Maximize","Close","JSONEditor","window","Disk_Select","_JSONEditor$AbstractE","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this","self","this","header","label","theme","getFormInputLabel","getTitle","isRequired","container","appendChild","disks","options","div","document","createElement","append","view_root","ReactDOM","rix_init_flag","onChange","e","v","preventDefault","setValue","used_disks","rix_make_watch_data","used","cur_path","parent","schema","uniqueItems","cur_list","jsoneditor","watch","path","list","getValue","map","set","set_model","pr","getEditor","v2","model","filter","global_data","defaults","MyRender","_useState","useState","_useState2","_slicedToArray","setOptions","_useState3","_useState4","get","useEffect","set_options","list_options","name","length","unwatch","Autocomplete","freeSolo","getOptionLabel","option","disk","concat","size","renderInput","params","TextField","_objectSpread","render","init","fromTemplate","refreshValue","_this2","setTimeout","unmount","AbstractEditor","JsonEditorForm","editorRef","callbacks","useRef","containerRef","useData","editors","disk_select","resolvers","unshift","type","format","current","on","data","destroy","useImperativeHandle","SambaSetting","_useData","api","content","update_content","jsonEditorFormRef","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","conf","wrap","_context","prev","next","samba","sent","stop","update_config","_ref2","_callee2","config","_context2","t0","console","log","restart","_ref3","_callee3","_context3","Container","style","width","height","Button","get_config","ret","abrupt","save_config","start","p","command","args","_callee4","_context4","_callee5","_context5","createSvgIcon","d"],"sourceRoot":""}