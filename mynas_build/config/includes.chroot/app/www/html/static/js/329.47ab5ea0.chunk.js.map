{"version":3,"file":"static/js/329.47ab5ea0.chunk.js","mappings":"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","sources":["components/JsonEditorForm.js","components/Parameters.js"],"sourcesContent":["import React, {useState, useEffect, useRef, useContext, forwardRef, useImperativeHandle, Fragment } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useData,rix_make_watch_data } from \"../store/global_data.js\";\nimport {Autocomplete, TextField} from '@mui/material';\n\nlet JSONEditor = window.JSONEditor;\n\n\nclass Disk_Select extends JSONEditor.AbstractEditor{\n    build() {\n        let value = this.value;\n        let self = this;\n        this.title = this.header = this.label = this.theme.getFormInputLabel(this.getTitle(), this.isRequired());\n        this.container.appendChild(this.title);\n        let disks = this.options.disks;\n        this.disks = disks;\n        const div = document.createElement('div');\n        this.container.append(div);\n        this.view_root = ReactDOM.createRoot(div);\n        this.rix_init_flag = false;\n        let onChange = (e, v)=> {\n            e.preventDefault();\n            this.setValue(v, false, false);\n        };\n        this.used_disks = rix_make_watch_data({used:[], cur_path:''});\n        if(this.parent.parent&&this.parent.parent.schema.uniqueItems) {\n            let cur_list = this.parent.parent;\n            this.jsoneditor.watch(cur_list.path, ()=> {\n                let v2 = cur_list.getValue();\n                let list = v2.map(v=>v.path);\n                this.used_disks.set('used', list);\n            });\n        }\n        this.set_model = (v)=> {\n            if (self.parent && self.parent.jsoneditor) {\n                let pr = self.parent.jsoneditor.getEditor(self.parent.path + '.model');\n                if (pr && self.disks) {\n                    let v2 = v;\n                    let model = self.disks.filter(v => v.path == v2)[0];\n                    if (model) {\n                        pr.setValue(model.model);\n                    }\n                }\n            }\n        };\n        this.used_disks.watch('cur_path', this.set_model);\n        const {global_data} = this.defaults;//useData();\n        let MyRender = ()=> {\n            const [options, setOptions] = useState([]);\n            const [value, setValue] = useState('');\n            if(!disks) disks = global_data.get('blockdevices');\n            this.disks = disks;\n            useEffect(() => {\n                let set_options = (v2)=> {\n                    let list_options = disks.map(v=>v.path);\n                    list_options = list_options.filter(v=> {\n                        return v2.filter(name=>name==v).length == 0;\n                    });\n                    setOptions(list_options);\n                };\n                this.used_disks.watch('used', set_options);\n                let set_v = (v2)=> {\n                    setValue(v2);\n                    this.set_model(v2);\n                };\n                set_options(this.used_disks.get('used'));\n                set_v(this.used_disks.get('cur_path'));\n                //this.used_disks.watch('cur_path', set_v);\n                return ()=> {\n                    this.used_disks.unwatch('used', set_options);\n                    //this.used_disks.unwatch('cur_path', set_v);\n                };\n            },[]);\n            return <Autocomplete\n                     freeSolo\n                     value={value}\n                     onChange={onChange}\n                     options={options}\n                     getOptionLabel={(option) => {\n                         let disk = disks.filter(v=>v.path == option)[0];\n                         if(disk) {\n                             let v = `${disk.model}(${disk.size}) at ${disk.path}`;\n                             return v;\n                         }\n                         return \"\";\n                     }}\n                     renderInput={(params) => {\n                                               return <TextField {...params} label=\"选择磁盘\" />;\n                                              }}\n                   />;\n        };\n        this.view_root.render(<MyRender/>);\n    }\n    setValue(v, init, fromTemplate) {\n        this.value = v;\n        this.refreshValue();\n        this.used_disks.set(\"cur_path\", v);\n        this.onChange(true);\n    }\n    getValue() {\n        return this.value;\n    }\n    destroy() {\n        this.used_disks.unwatch(this.set_model);\n        setTimeout(()=> {\n        this.view_root.unmount();\n        });\n    }\n}\nconst JsonEditorForm = forwardRef((props, ref) => {\n    const { schema, callbacks} = props;\n    const editorRef = useRef(null);\n    const containerRef = useRef(null);\n    const {global_data} = useData();\n    JSONEditor.defaults.editors.disk_select= Disk_Select;\n    JSONEditor.defaults.global_data = global_data;\n    //JSONEditor.defaults.options.keep_oneof_values = false;\n    JSONEditor.defaults.resolvers.unshift(function (schema) {\n        if (schema.type === 'string' && schema.format === 'disk_select') {\n            return 'disk_select';\n        }\n    });\n    //if(editorRef.current&&props.data) {\n    //    editorRef.current.setValue(props.data);\n    //}\n    useEffect(() => {\n        //if(editorRef.current) return;\n        let options = {\n            schema,\n            theme: 'bootstrap4',\n            //iconlib: 'fontawesome4',\n            ...props.options\n            //disable_collapse: true,\n            //disable_edit_json: true,\n            //disable_properties: true,\n            //no_additional_properties: true,\n            //required_by_default: true,\n        };\n        editorRef.current = new JSONEditor(containerRef.current, options);\n        editorRef.current.on('ready',() => {\n            // Now the api methods will be available\n            if(props.data)\n            editorRef.current.setValue(props.data);\n        });\n        return () => {\n            if (editorRef.current) {\n                editorRef.current.destroy();\n            }\n        };\n    }, [schema,props]);\n\n    const getValue = () => {\n        return editorRef.current.getValue();\n    };\n\n    useImperativeHandle(ref, () => ({\n        getValue,\n    }));\n\n    return (\n        <div ref={containerRef} {...props}/>\n    );\n});\nexport default JsonEditorForm;\n","import React, { useState, useEffect, useRef } from 'react';\nimport api from '../api';\nimport JsonEditorForm from './JsonEditorForm';\nimport { styled } from '@mui/system';\nimport { Table, Pagination, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, TableContainer,\n         TableHead,\n         TableRow,\n         TableCell,\n         TableBody,\n         Paper,\n         TablePagination,\n       } from '@mui/material';\n\n\nconst Parameters = () => {\n    const [parameters, setParameters] = useState([]);\n    const [data, setData] = useState({id:0,key:'',status:0,type:0,value:'', parent_id:0});\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [filter, setFilter] = useState('');\n    const [schema, setSchema] = useState({\n        type: \"object\",\n        properties: {\n            id: { type: \"integer\", title: \"ID\", readonly: true },\n            key: { type: \"string\", title: \"Key\" },\n            status: {\n                type: \"integer\",\n                title: \"Status\",\n                enum: [0, 1],\n                options: {\n                    enum_titles: [\"Not available\", \"Available\"],\n                }\n            },\n            type: {\n                type: \"integer\",\n                title: \"Type\",\n                enum: [0, 1, 2, 3, 4],\n                options: {\n                    enum_titles: [\"json\", \"string\", \"number\", \"bool\", \"null\"],\n                }\n            },\n            parent_id: {\n                type: \"integer\",\n                title: \"parent_id\",\n            },\n            value: { type: \"string\", title: \"Value\", format: \"json\",\n                     \"options\": {\n                         \"ace\": {\n                             \"theme\": \"ace/theme/vibrant_ink\",\n                             \"tabSize\": 2,\n                             \"useSoftTabs\": true,\n                         }\n                     }\n                   },\n        },\n        required: [\"key\", \"type\", \"value\", \"parent_id\", \"id\", \"status\"],\n    });\n    const [openAddDialog, setOpenAddDialog] = useState(false);\n    const [newParameter, setNewParameter] = useState({ key: '', value: '', type: '', status: '' });\n\n\n    useEffect(() => {\n        fetchParameters();\n    }, []);\n\n    const handleDeleteClick = async (id) => {\n        if (window.confirm('Are you sure you want to delete this parameter?')) {\n            try {\n                const response = await api.deleteParameter({ op: 'delete', data: { id }});\n\n                if (response.ok) {\n                    fetchParameters(); // 更新表格数据\n                } else {\n                    console.error('Error deleting parameter:', response.statusText);\n                }\n            } catch (error) {\n                console.error('Error deleting parameter:', error);\n            }\n        }\n    };\n\n    const jsonEditorFormRef = useRef(null);\n    const handleEditClick = (parameter) => {\n        setData(parameter);\n        console.log(\"data====\", data);\n        setOpenAddDialog(true);\n    };\n    const fetchParameters = async () => {\n        const data = await api.getParameters(filter);\n        setParameters(data);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterChange = (event) => {\n        setFilter(event.target.value);\n    };\n\n    const filteredData = parameters.filter((row) => {\n        return Object.values(row).some((value) => {\n            return value.toString().toLowerCase().includes(filter.toLowerCase());\n        });\n    });\n\n    let obj = {};\n    const handleAddButtonClick = () => {\n        let aschema = schema;\n        let this_enum = [0];\n        let this_enum_options = {\n            enum_titles:['']\n        };\n        for(let i in parameters) {\n            let one  = parameters[i];\n            if(one.status == 1&&one.type==0) {\n                this_enum.push(one.id);\n                this_enum_options.enum_titles.push(one.key);\n            }\n        }\n        console.log(\"obj==\", obj, this_enum);\n        if(this_enum.length > 0) {\n            aschema.properties.parent_id.enum = this_enum;\n            aschema.properties.parent_id.options = this_enum_options;\n        }\n        setSchema(aschema);\n        setOpenAddDialog(true);\n    };\n\n    const handleCloseAddDialog = () => {\n        setOpenAddDialog(false);\n    };\n\n\n    const handleSaveAddDialog = async () => {\n        try {\n            const newParameterData = jsonEditorFormRef.current.getValue();\n            const response = await api.addParameter({ ...newParameterData});\n\n            if (response.ok) {\n                fetchParameters(); // 更新表格数据\n                setOpenAddDialog(false); // 关闭对话框\n            } else {\n                console.error('Error saving parameter:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error saving parameter:', error);\n        }\n    };\n\n    const CustomDialogContent = styled(DialogContent)({\n        width: '80%',\n    });\n    const renderAddDialog = () => {\n        return (\n            <Dialog open={openAddDialog} onClose={handleCloseAddDialog} fullWidth maxWidth=\"md\">\n              <DialogTitle>添加参数</DialogTitle>\n              <CustomDialogContent>\n                <JsonEditorForm schema={schema} ref={jsonEditorFormRef} data={data}/>\n              </CustomDialogContent>\n              <DialogActions>\n                <Button onClick={handleSaveAddDialog}>保存</Button>\n                <Button onClick={handleCloseAddDialog}>取消</Button>\n              </DialogActions>\n            </Dialog>\n        );\n    };\n    for(let i in parameters) {\n        let one = parameters[i];\n        if(one.status == 0) continue;\n        switch(one.type) {\n        case 4:\n            obj[one.key] = null;\n            break;\n        case 0:\n            try {\n                obj[one.key] = JSON.parse(one.value);\n            } catch (e) {\n                obj[one.key] = one.value;\n            }\n            break;\n        default:\n            obj[one.key] = one.value;\n            break;\n        }\n    }\n    let rend_value = (v)=> {\n        let value = v.value;\n        if(value.indexOf('${')>=0&&v.type == 1) {\n            try {\n                // 获取对象的所有键，并将其转换为参数列表\n                const keys = Object.keys(obj).join(',');\n                // 创建一个新的函数，该函数接受对象的键作为参数并返回字符串\n                const func = new Function(keys, `\"use strict\"; return \\`${value}\\`;`);\n                // 使用对象的值调用该函数\n                const values = Object.values(obj);\n                const result = func(...values);\n                return result;\n            } catch (e) {\n                //let error = `error: ${JSON.stringify(v)}`;\n                //alert(error);\n                return value;\n            }\n        }\n        return value;\n    };\n    return (\n        <div>\n          <TextField\n            label=\"Filter\"\n            variant=\"outlined\"\n            value={filter}\n            onChange={handleFilterChange}\n            style={{ marginBottom: '1rem' }}\n          />\n          <Button onClick={handleAddButtonClick}>添加</Button>\n          {renderAddDialog()}\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>设备</TableCell>\n                  <TableCell>标识</TableCell>\n                  <TableCell>温度</TableCell>\n                  <TableCell>读取</TableCell>\n                  <TableCell>写入</TableCell>\n                  <TableCell>错误</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredData\n                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                 .map((row) => (\n                     <TableRow key={row.id}>\n                       <TableCell>\n                         <Button onClick={() => handleEditClick(row)}>编辑</Button>\n                         <Button onClick={() => handleDeleteClick(row.id)}>删除</Button>\n                       </TableCell>\n                       <TableCell>{row.id}</TableCell>\n                       <TableCell>{row.key}</TableCell>\n                       <TableCell>{rend_value(row)}</TableCell>\n                       <TableCell>{row.type}</TableCell>\n                       <TableCell>{row.status}</TableCell>\n                     </TableRow>\n                 ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            component=\"div\"\n            count={filteredData.length}\n            page={page}\n            onPageChange={handleChangePage}\n            rowsPerPage={rowsPerPage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            style={{ marginTop: '1rem' }}\n          />\n        </div>\n    );\n};\n\nexport default Parameters;\n"],"names":["JSONEditor","window","Disk_Select","_JSONEditor$AbstractE","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this","self","this","title","header","label","theme","getFormInputLabel","getTitle","isRequired","container","appendChild","disks","options","div","document","createElement","append","view_root","ReactDOM","rix_init_flag","onChange","e","v","preventDefault","setValue","used_disks","rix_make_watch_data","used","cur_path","parent","schema","uniqueItems","cur_list","jsoneditor","watch","path","list","getValue","map","set","set_model","pr","getEditor","v2","model","filter","global_data","defaults","MyRender","_useState","useState","_useState2","_slicedToArray","setOptions","_useState3","_useState4","get","useEffect","set_options","list_options","name","length","unwatch","_jsx","Autocomplete","freeSolo","getOptionLabel","option","disk","concat","size","renderInput","params","TextField","_objectSpread","render","init","fromTemplate","refreshValue","_this2","setTimeout","unmount","AbstractEditor","JsonEditorForm","forwardRef","props","ref","editorRef","callbacks","useRef","containerRef","useData","editors","disk_select","resolvers","unshift","type","format","current","on","data","destroy","useImperativeHandle","parameters","setParameters","id","status","parent_id","setData","_useState5","_useState6","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","_useState12","setFilter","_useState13","properties","readonly","enum","enum_titles","required","_useState14","setSchema","_useState15","_useState16","openAddDialog","setOpenAddDialog","_useState17","_useState18","fetchParameters","handleDeleteClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","confirm","api","op","sent","ok","console","error","statusText","t0","stop","_x","jsonEditorFormRef","_ref2","_callee2","_context2","filteredData","row","Object","values","some","toString","toLowerCase","includes","obj","handleCloseAddDialog","handleSaveAddDialog","_ref3","_callee3","newParameterData","_context3","CustomDialogContent","styled","DialogContent","width","i","one","JSON","parse","rend_value","indexOf","keys","join","func","Function","_jsxs","children","variant","event","target","style","marginBottom","Button","onClick","aschema","this_enum","this_enum_options","push","log","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","TablePagination","count","onPageChange","newPage","onRowsPerPageChange","parseInt","marginTop"],"sourceRoot":""}